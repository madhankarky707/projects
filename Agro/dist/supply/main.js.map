{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/consumer-crops/consumer-crops.component.css","webpack:///./src/app/consumer-crops/consumer-crops.component.html","webpack:///./src/app/consumer-crops/consumer-crops.component.ts","webpack:///./src/app/cus-reg/cus-reg.component.css","webpack:///./src/app/cus-reg/cus-reg.component.html","webpack:///./src/app/cus-reg/cus-reg.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.css","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.html","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.ts","webpack:///./src/app/former-reg/former-reg.component.css","webpack:///./src/app/former-reg/former-reg.component.html","webpack:///./src/app/former-reg/former-reg.component.ts","webpack:///./src/app/former/former.component.css","webpack:///./src/app/former/former.component.html","webpack:///./src/app/former/former.component.ts","webpack:///./src/app/gaurd/admin.guard.ts","webpack:///./src/app/gaurd/consumer-check.guard.ts","webpack:///./src/app/gaurd/farmer-check.guard.ts","webpack:///./src/app/gaurd/shop-check.guard.ts","webpack:///./src/app/gaurd/supplier-check.guard.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/overview/overview.component.css","webpack:///./src/app/overview/overview.component.html","webpack:///./src/app/overview/overview.component.ts","webpack:///./src/app/persons/persons.component.css","webpack:///./src/app/persons/persons.component.html","webpack:///./src/app/persons/persons.component.ts","webpack:///./src/app/service/chain-service.service.ts","webpack:///./src/app/shop-crops/shop-crops.component.css","webpack:///./src/app/shop-crops/shop-crops.component.html","webpack:///./src/app/shop-crops/shop-crops.component.ts","webpack:///./src/app/shop-reg/shop-reg.component.css","webpack:///./src/app/shop-reg/shop-reg.component.html","webpack:///./src/app/shop-reg/shop-reg.component.ts","webpack:///./src/app/shop/shop.component.css","webpack:///./src/app/shop/shop.component.html","webpack:///./src/app/shop/shop.component.ts","webpack:///./src/app/shopwithdraw/shopwithdraw.component.css","webpack:///./src/app/shopwithdraw/shopwithdraw.component.html","webpack:///./src/app/shopwithdraw/shopwithdraw.component.ts","webpack:///./src/app/sign/sign.component.css","webpack:///./src/app/sign/sign.component.html","webpack:///./src/app/sign/sign.component.ts","webpack:///./src/app/stock-list/stock-list.component.css","webpack:///./src/app/stock-list/stock-list.component.html","webpack:///./src/app/stock-list/stock-list.component.ts","webpack:///./src/app/supplier-reg/supplier-reg.component.css","webpack:///./src/app/supplier-reg/supplier-reg.component.html","webpack:///./src/app/supplier-reg/supplier-reg.component.ts","webpack:///./src/app/supplier/supplier.component.css","webpack:///./src/app/supplier/supplier.component.html","webpack:///./src/app/supplier/supplier.component.ts","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.css","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.html","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SupplierComponent } from '../supplier/supplier.component';\r\nimport { ShopComponent } from '../shop/shop.component';\r\nimport { FormerComponent } from '../former/former.component';\r\nimport { CustomerComponent } from '../customer/customer.component';\r\nimport { SupplierRegComponent } from '../supplier-reg/supplier-reg.component';\r\nimport { ShopRegComponent } from '../shop-reg/shop-reg.component';\r\nimport { CusRegComponent } from '../cus-reg/cus-reg.component';\r\nimport { FormerRegComponent } from \"../former-reg/former-reg.component\";\r\nimport { FarmerCheckGuard } from '../gaurd/farmer-check.guard';\r\nimport { SupplierCheckGuard } from '../gaurd/supplier-check.guard';\r\nimport { ShopCheckGuard } from '../gaurd/shop-check.guard';\r\nimport { ConsumerCheckGuard } from '../gaurd/consumer-check.guard';\r\nimport { AdminGuard } from '../gaurd/admin.guard';\r\n\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { UserComponent } from '../user/user.component';\r\nimport { OverviewComponent } from '../overview/overview.component';\r\nimport { PersonsComponent } from '../persons/persons.component';\r\nimport { StockListComponent } from '../stock-list/stock-list.component';\r\nimport { ShopCropsComponent } from '../shop-crops/shop-crops.component';\r\nimport { ConsumerCropsComponent } from '../consumer-crops/consumer-crops.component';\r\nimport { FarmerwithdrawComponent } from '../farmerwithdraw/farmerwithdraw.component';\r\nimport { SupplierwithdrawComponent } from '../supplierwithdraw/supplierwithdraw.component';\r\nimport { ShopwithdrawComponent  } from '../shopwithdraw/shopwithdraw.component';\r\nimport { SignComponent } from '../sign/sign.component';\r\n\r\nconst routes: Routes=[\r\n  \r\n  {\r\n    path:'Former',\r\n    component:FormerComponent,\r\n    canActivate : [FarmerCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Farmerwithdraw',\r\n    component:FarmerwithdrawComponent,\r\n    canActivate : [FarmerCheckGuard]\r\n  \r\n  },\r\n\r\n  {\r\n    path:'Supplier',\r\n    component:SupplierComponent,\r\n    canActivate : [SupplierCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Supplierwithdraw',\r\n    component:SupplierwithdrawComponent,\r\n    canActivate : [SupplierCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Customer',\r\n    component:CustomerComponent,\r\n    canActivate : [ConsumerCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Shop',\r\n    component:ShopComponent,\r\n    canActivate : [ShopCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Shopwithdraw',\r\n    component:ShopwithdrawComponent,\r\n    canActivate : [ShopCheckGuard]\r\n  \r\n  },\r\n  { \r\n    path: 'addsupplier',\r\n    component: SupplierRegComponent,\r\n  },\r\n  { \r\n    path: 'addshop',\r\n    component: ShopRegComponent,\r\n  },\r\n  \r\n{ \r\n  path: 'addconsumer',\r\n  component: CusRegComponent,\r\n},\r\n { \r\n  path: 'addfarmer',\r\n  component: FormerRegComponent,\r\n},\r\n{\r\npath: 'home',\r\ncomponent: HomeComponent,\r\ncanActivate : [AdminGuard]\r\n},\r\n{\r\npath: 'user',\r\ncomponent: UserComponent,\r\n},\r\n{\r\n  path: 'dashboard',\r\n  component: OverviewComponent,\r\n  // canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'persons',\r\n    component: PersonsComponent,\r\n    },\r\n    {\r\n      path: 'suppliercrops',\r\n      component: StockListComponent,\r\n      },\r\n      {\r\n        path: 'shopcrops',\r\n        component: ShopCropsComponent,\r\n        },\r\n        {\r\n          path: 'consumercrops',\r\n          component: ConsumerCropsComponent,\r\n          },\r\n    {\r\n      path: 'sign',\r\n      component: SignComponent,\r\n      },  \r\n  {\r\n    path:'',\r\n    redirectTo:'/home',\r\n    pathMatch:'full'\r\n  },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\nexport const routerComponent = [ ];\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n \"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SupplierComponent } from './supplier/supplier.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { FormerComponent } from './former/former.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { ReactiveFormsModule,FormsModule} from '@angular/forms';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { FormerRegComponent } from './former-reg/former-reg.component';\r\nimport { CusRegComponent } from './cus-reg/cus-reg.component';\r\nimport { ShopRegComponent } from './shop-reg/shop-reg.component';\r\nimport { SupplierRegComponent } from './supplier-reg/supplier-reg.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { FarmerwithdrawComponent } from './farmerwithdraw/farmerwithdraw.component';\r\nimport { SupplierwithdrawComponent } from './supplierwithdraw/supplierwithdraw.component';\r\nimport { ShopwithdrawComponent  } from './shopwithdraw/shopwithdraw.component';\r\nimport { PersonsComponent } from './persons/persons.component';\r\nimport { StockListComponent } from './stock-list/stock-list.component';\r\nimport { ShopCropsComponent } from './shop-crops/shop-crops.component';\r\nimport { ConsumerCropsComponent } from './consumer-crops/consumer-crops.component';\r\nimport { SignComponent } from './sign/sign.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SupplierComponent,\r\n    ShopComponent,\r\n    FormerComponent,\r\n    CustomerComponent,\r\n    FormerRegComponent,\r\n    CusRegComponent,\r\n    ShopRegComponent,\r\n    SupplierRegComponent,\r\n    HomeComponent,\r\n    OverviewComponent,\r\n    UserComponent,\r\n    PersonsComponent,\r\n    StockListComponent,\r\n    ShopCropsComponent,\r\n    ConsumerCropsComponent,\r\n    SignComponent,\r\n    FarmerwithdrawComponent,\r\n    SupplierwithdrawComponent,\r\n    ShopwithdrawComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 30px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <app-home></app-home>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n        <h2><b>Retailer</b></h2>\\n        <hr>\\n      <br><br><br>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-8\\\">\\n      \\n                <h4><b>List of Retailer</b></h4><br>\\n            \\n                <table class=\\\"table table-striped\\\" style=\\\"display:block;height:500px;\\\">\\n                    <thead class=\\\"tablecolor\\\">\\n                      <tr>\\n                        <th>Retailer Id</th>\\n                        <th>Retailer Name</th>\\n                        <th>Retailer Address</th>\\n                        <th></th>\\n                      </tr>\\n                    </thead>\\n                    <tbody >\\n                        <tr *ngFor=\\\"let consumer of consumers\\\" >\\n                            <td>{{ consumer.consumer_id }}</td> \\n                            <td>{{ consumer.consumer_name }}</td>\\n                            <td>{{ consumer.consumer_address }}</td>\\n                            <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" (click)=\\\"crop_details(consumer.consumer_id)\\\"></td>\\n                        </tr>\\n                </tbody>\\n                  </table>  \\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n\\n                <h4><b>Available Crop's Details</b></h4><br>\\n            \\n                <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:500px;\\\">\\n                    <thead class=\\\"tablecolor\\\">\\n                      <tr>\\n                        <th>Crop Id</th>\\n                        <th>Crop Name</th>\\n                        <th>Quantity</th>\\n                        <!-- <th>Price</th> -->\\n  \\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let crop of cropdetails\\\" >\\n                            <td>{{ crop.crop_id }}</td> \\n                            <td>{{ crop.crop_name }}</td>\\n                            <td>{{ crop.crop_quantity}}</td>\\n                            <!-- <td>{{ crop.crop_price}}</td> -->\\n                        </tr>\\n                </tbody>\\n                  </table>  \\n            </div>\\n          </div>\\n            \\n          \\n\\n\\n    </div>\\n  </div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from \"../service/chain-service.service\";\n\n@Component({\n  selector: 'app-consumer-crops',\n  templateUrl: './consumer-crops.component.html',\n  styleUrls: ['./consumer-crops.component.css']\n})\nexport class ConsumerCropsComponent implements OnInit {\n\n  constructor(private cs:ChainServiceService) { }\n\n  public consumers=[];\n  public cropdetails=[];\n\n  list_of_consumer()\n  {\n    this.consumers.length=0;\n    this.cs.consumer_ids().then(ids=>{\n      ids.forEach(consumer_id=>{\n        this.cs.consumer_name(consumer_id).then(consumer_name=>{\n      this.cs.consumer_by_id(consumer_id).then(consumer_address =>{\n        // alert(supplier_name+''+supplier_address)\n        let obj={};\n        obj['consumer_id']=consumer_id;\n        obj['consumer_name']=consumer_name;\n        obj['consumer_address']=consumer_address;\n        this.consumers.push(obj)\n      })  \n      })\n    })\n    })\n  }\n\n  \n  crop_details(consumer_id){\n    this.cropdetails.length=0;\n        this.cs.order_id(consumer_id).then(order_ids=>{\n          order_ids.forEach(or_id=>{\n\n    this.cs.consumer_map(consumer_id,or_id).then(result=>{\n             let obj={};\n        obj['crop_id']=result[0];\n        this.cs.product_detail_map(result[0]).then(res =>obj['crop_name']=res[0]);\n        obj['crop_quantity']=result[1];\n        // obj['crop_price']=result[2];\n        this.cropdetails.push(obj);\n    })\n    })\n\n    })\n\n  }\n\n\n\n\n\n  \n// this.cs.consumer_ids().then(cons_ids=>{\n//   cons_ids.forEach(id=>{\n//     this.cs.order_id(id).then(order_ids=>{\n//       order_ids.forEach(or_id=>{\n//     this.cs.consumer_map(id,or_id).then(result=>{\n//       if(result[0]==text_id)\n//       {\n//       this.cs.shop_name(result[2]).then(shop_name=>{\n//               this.cs.consumer_by_id(id).then(address=>{\n//       this.cs.consumer_name(id).then(name=>{\n//         let obj3={};\n//         obj3['consumer_id']=id;\n//         obj3['consumer_name']=name;\n//         obj3['consumer_address']=address;\n//         obj3['crop_price']=result[3];\n//         obj3['crop_quantity']=result[1];\n//         obj3['shop_id']=result[2];\n//         obj3['shop_name']=shop_name;\n//         //  alert(name+''+address+''+result[0]+''+result[1]+''+result[2])\n//          console.log(obj3);\n         \n//          this.consumers_list.push(obj3)\n//       })\n//     })\n//   })\n//   }\n//  })\n// })\n// })\n// })\n// })\n\n  ngOnInit() {\n    this.list_of_consumer()\n  }\n\n}\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n    \\r\\n    <div class=\\\"jumbotron text-center\\\">\\r\\n      <h3>CONSUMER REGISTRATION</h3>\\r\\n      \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id = \\\"id1\\\" #name placeholder=\\\"Enter Name\\\" name=\\\"Name\\\">\\r\\n          <br><br>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn\\\"(click)=\\\"consumer_registeration(name.value)\\\">Register</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n   \\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ngx-spinner></ngx-spinner>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-cus-reg',\r\n  templateUrl: './cus-reg.component.html',\r\n  styleUrls: ['./cus-reg.component.css']\r\n})\r\nexport class CusRegComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private spinner:NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  consumer_registeration(name)\r\n  {\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address=>{\r\n      this.cs.consumer_registeration(name,address).then(res =>{\r\n        this.spinner.hide();\r\n        \r\n        if(res == 1) {\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Successfully Registered...!\");\r\n        }\r\n        else if( res == 0){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"You Rejected this transaction...!\");\r\n        }\r\n        else if(res == 2){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Transaction Failed...!\");\r\n        }\r\n      })\r\n    \r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n        \\r\\n        <div class=\\\"container-fluid\\\">\\r\\n <h2><b>Retailer</b></h2>\\r\\n <hr>\\r\\n            <br><br>\\r\\n               <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-sm-3\\\">\\r\\n                     <!-- <div class=\\\"row\\\"> -->\\r\\n                    \\r\\n                       <!-- <div class=\\\"col-sm-6\\\"> -->\\r\\n                               <h3><b>Retailer Purchase Crop</b></h3>\\r\\n                               <br>\\r\\n                               \\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                               <div class=\\\"form-group\\\">\\r\\n                                   <label for=\\\"usr\\\">Crop id:</label>\\r\\n                                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id1\\\" #productid  placeholder=\\\"Enter Crop Id\\\">\\r\\n                                 </div>\\r\\n                           </div>\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                         <div class=\\\"form-group\\\">\\r\\n                             <label for=\\\"usr\\\">Crop Quantity:</label>\\r\\n                             <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id2\\\" #productquantity   placeholder=\\\"Enter the Quantity\\\">\\r\\n                           </div>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                               <label for=\\\"usr\\\">Distributor ID:</label>\\r\\n                               <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id3\\\" #shopid  placeholder=\\\"Enter Distributor Id\\\">\\r\\n                             </div>\\r\\n                             </div>\\r\\n                     <br>\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"Customer_purchase_product(productid.value,productquantity.value,shopid.value)\\\">Purchase Crop</button>&nbsp;&nbsp;\\r\\n                    \\r\\n                     \\r\\n                       </div>\\r\\n                   </div>\\r\\n           \\r\\n                   <div class=\\\"col-sm-3\\\">\\r\\n           \\r\\n                   </div>\\r\\n           \\r\\n                     <!-- </div> -->\\r\\n                      \\r\\n                   <!-- </div> -->\\r\\n           \\r\\n           \\r\\n                   <div class=\\\"col-sm-6\\\">\\r\\n                           <h3><b>Available Crop Details</b></h3><br>\\r\\n                           <table class=\\\"table\\\" style=\\\"overflow-y:auto;display:block;height:300px;\\\">\\r\\n                     \\r\\n                               <!--Table head-->\\r\\n                               <thead class=\\\"tablecolor\\\">\\r\\n                                   <tr class=\\\"text-black\\\">\\r\\n                                        <th>Crop Name</th>  \\r\\n                                       <th>Crop ID</th>    \\r\\n                                       <th>Distributor ID</th>                  \\r\\n                                       <th>Price Per Quantity <small>(in ether)</small></th>\\r\\n                                       <th>Quantity</th>\\r\\n                                       <!-- <th>Seller ID</th> -->\\r\\n                                   </tr>\\r\\n                               </thead>\\r\\n                               <!--Table head-->\\r\\n                           \\r\\n                               <!--Table body-->\\r\\n                               <tbody >\\r\\n                                       <tr *ngFor=\\\"let s of available_crop_details\\\" >\\r\\n                                            <td>{{ s. product_name}}</td> \\r\\n                                           <td>{{ s.productid }}</td> \\r\\n                                           <td>{{s.shopid}}</td>\\r\\n                                           <td>{{ s.price }}</td>\\r\\n                                           <td>{{s.quantity}}</td>\\r\\n                                           <!-- <td>{{s.sellerid}}</td> -->\\r\\n                                       </tr>\\r\\n                               </tbody>\\r\\n                               <!--Table body-->\\r\\n                           </table>\\r\\n                     </div>\\r\\n                     \\r\\n                 </div>\\r\\n           \\r\\n                 <br>\\r\\n                 <br>\\r\\n                 \\r\\n                 <div class=\\\"row\\\">\\r\\n                     <!-- <div class=\\\"col-sm-2\\\"></div> -->\\r\\n                   <div class=\\\"col-sm-12\\\">\\r\\n           \\r\\n                           <h3><b>Purchased Crop Details</b></h3><br>\\r\\n                           <table class=\\\"table\\\"  style=\\\"overflow-y:auto;display:block;height:300px;\\\">\\r\\n                     \\r\\n                               <!--Table head-->\\r\\n                               <thead class=\\\"tablecolor\\\">\\r\\n                                   <tr class=\\\"text-black\\\">\\r\\n                                        <th>Crop name</th>   \\r\\n                                       <th>Crop ID</th>                        \\r\\n                                       <th>Quantity</th>\\r\\n                                       <th>Distributor ID</th>\\r\\n                                   </tr>\\r\\n                               </thead>\\r\\n                               <!--Table head-->\\r\\n                           \\r\\n                               <!--Table body-->\\r\\n                               <tbody >\\r\\n                                       <tr *ngFor=\\\"let s of customer_details\\\" >\\r\\n                                         <td>{{s.product_name}}</td>\\r\\n                                        <td>{{s.product_id}}</td>\\r\\n                                           <td>{{s.quantity}}</td>\\r\\n                                           <td>{{ s.shop_id }}</td> \\r\\n                                       </tr>\\r\\n                               </tbody>\\r\\n                               <!--Table body-->\\r\\n                           </table>\\r\\n           \\r\\n           \\r\\n                    \\r\\n              \\r\\n                  \\r\\n                 </div>\\r\\n               </div>\\r\\n           </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <meta charset=\\\"utf-8\\\">\\r\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\r\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\r\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script> -->\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  public customer_details=[];\r\n  public available_crop_details=[];\r\n    constructor(private cs:ChainServiceService,private spinner: NgxSpinnerService) { }\r\n  \r\n  \r\n    Customer_purchase_product(product_id,product_quantity,shop_id)\r\n    {\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.product_detail_map_shop(product_id,shop_id).then(p_d_m => {\r\n          console.log(typeof(product_id),typeof(product_quantity),typeof(shop_id),address,p_d_m[0]*product_quantity)\r\n          this.cs.consumer_buy_product(parseInt(product_id),parseInt(product_quantity),parseInt(shop_id),address,(p_d_m[0].toNumber()/1000000000000000000)*product_quantity).then(res => {\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n            (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n            this.spinner.hide();\r\n            if(res == 1)\r\n            {\r\n              swal(\"You Bought Crop Successfully\")\r\n            }\r\n            else if(res == 0)\r\n            {\r\n              swal(\"You Rejected this Transaction\")\r\n            }\r\n            else if(res == 2){\r\n              swal(\"Transaction Failed\")\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }\r\n    \r\n  \r\n    available_crops(){\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.shop_ids().then(ids=>{\r\n          this.cs.product_ids().then(pids=>{\r\n            ids.forEach(shop_id=>{\r\n              pids.forEach(pid=>{\r\n                this.cs.product_detail_map_shop(pid,shop_id).then(result=>{\r\n                  this.cs.shop_name(shop_id).then(shop_name=>{\r\n                    this.cs.product_detail_map(pid).then(pro_d => {\r\n                  if(result[1].toNumber()!=0){\r\n                      let obj={};\r\n                      obj['product_name']=pro_d[0];\r\n                      obj['shopid']=shop_id;\r\n                      obj['shopname']=shop_name;\r\n                      obj['productid']=pid;\r\n                      obj['price']=result[0].toNumber()/1000000000000000000;\r\n                      console.log(result[0].toNumber()/1000000000000000000);\r\n                      \r\n                      obj['quantity']=result[1];\r\n                      // obj['sellerid']=result[2];\r\n                   this.available_crop_details.push(obj); \r\n             }\r\n            })\r\n          })\r\n            })\r\n          })\r\n          });\r\n        })\r\n        })\r\n      })\r\n    }\r\n  \r\n  \r\n  consumers_crops(){\r\n    this.cs.getAccount().then(address=>\r\n    this.cs.consumer_id_by_address(address).then(cus_id => {\r\n        this.cs.order_id(cus_id).then(order_ids => {\r\n            order_ids.forEach(order_id=>{\r\n          this.cs.consumer_map(cus_id,order_id).then(res => {\r\n            this.cs.product_detail_map(res[0]).then(pro_d => {\r\n            let obj = {};\r\n            obj['product_name']=pro_d[0];\r\n            obj['product_id']=res[0];\r\n            obj['quantity']=res[1];\r\n            obj['shop_id']=res[2];\r\n            this.customer_details.push(obj); \r\n          })\r\n        })\r\n      })\r\n    })\r\n    })\r\n  )\r\n  }\r\n  \r\n    ngOnInit() {\r\n      this.available_crops()\r\n      this.consumers_crops()\r\n    }\r\n  \r\n}\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \" <div class=\\\"row\\\">\\n     \\n       \\n      <div class=\\\"col-sm-6\\\">\\n          <app-header></app-header>\\n      </div>\\n\\n      \\n      <div class=\\\"col-sm-2\\\">\\n          <br><br><br><br><br><br>\\n            <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\n          <h2 style=\\\"text-align:center\\\"><b>{{farmer_bal}}</b></h2>\\n\\n\\n         &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br>\\n          \\n          <button   class=\\\"btn center-block\\\" (click)=\\\"withdraw_func(withdrawamt.value)\\\">withdraw</button>\\n\\n      </div> \\n\\n          <div class=\\\"col-sm-4\\\">\\n\\n          </div>\\n\\n  </div> \\n  <ngx-spinner></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from '../service/chain-service.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n\n@Component({\n  selector: 'app-farmerwithdraw',\n  templateUrl: './farmerwithdraw.component.html',\n  styleUrls: ['./farmerwithdraw.component.css']\n})\nexport class FarmerwithdrawComponent implements OnInit {\n  public  farmer_bal;\n  constructor(private cs:ChainServiceService,private spinner: NgxSpinnerService){}\n\n\n\n  farmer_balance(){\n      this.farmer_bal = 0;\n      this.cs.getAccount().then(address => {\n        this.cs.farmer_id_by_address(address).then(farmer_id => {\n          this.cs.farmer_balance(farmer_id).then(res => {\n            this.farmer_bal = res/1000000000000000000;\n          })\n        })\n      })\n    }\n    \n  \n  \n    withdraw_func(withdrawamt){\n      this.spinner.show();\n      if((document.getElementById('id1') as HTMLInputElement).value == '' || withdrawamt<=0){\n        alert(\"Please Enter a Valid amount...!\");\n        (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n        return;\n      }\n      this.cs.getAccount().then(address => {\n        this.cs.farmer_id_by_address(address).then(farmer_id => {\n          this.cs.farmer_balance(farmer_id).then(res => {\n            this.farmer_bal = res/1000000000000000000;\n            if( this.farmer_bal>=withdrawamt){\n\n            \n            this.cs.former_withdraw(withdrawamt*1000000000000000000,address).then(res => {\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n              this.spinner.hide();\n              if(res == 1)\n              {\n                alert(\" Amount Successfully Added to your Accounty\")\n                this.farmer_balance();\n              }\n              else if(res == 0)\n              {\n                alert(\"You Rejected this Transaction\")\n              }\n              else if(res == 2){\n                alert(\"Transaction Failed\")\n              }\n            })\n            }\n            else{\n              alert(\"You Can Withdraw Upto\" + this.farmer_bal);\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n            }\n          })\n        })\n      })\n      \n        \n    \n    }\n  \n  \n  \n\n  ngOnInit() {\n\n    this.farmer_balance();\n  }\n\n}\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <div class=\\\"jumbotron text-center\\\">\\r\\n            <h3>FARMER REGISTRATION</h3>\\r\\n            \\r\\n          </div>\\r\\n          <br><br><br>\\r\\n          <div class=\\\"container\\\"> \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n               \\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <label for=\\\"name\\\">Name:</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id = \\\"id1\\\"  #name placeholder=\\\"Enter Name\\\" name=\\\"Name\\\">\\r\\n                <br><br>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"farmer_registeration(name.value)\\\">Register</button>\\r\\n              </div>\\r\\n           \\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <ngx-spinner></ngx-spinner>                     \\r\\n        </div>\\r\\n        </div>\\r\\n      \\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-former-reg',\r\n  templateUrl: './former-reg.component.html',\r\n  styleUrls: ['./former-reg.component.css']\r\n})\r\nexport class FormerRegComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private spinner:NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  farmer_registeration(name)\r\n  {\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address=>{\r\n      this.cs.farmer_registeration(name,address).then(res =>{\r\n        this.spinner.hide();\r\n        \r\n        if(res == 1) {\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Successfully Registered...!\");\r\n        }\r\n        else if( res == 0){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"You Rejected this transaction...!\");\r\n        }\r\n        else if(res == 2){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Transaction Failed...!\");\r\n        }\r\n   \r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n                <h2><b>Farmer</b></h2>\\r\\n                <hr>\\r\\n           <br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n                \\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                     <h3><b> Add a New Crop</b></h3>\\r\\n                                    <br>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Crop Name</label>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"cname\\\" type=\\\"text\\\" id = \\\"id1\\\" placeholder=\\\"Enter the Crop Name\\\" #name id=\\\"usr\\\">\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"angForm.controls['cname'].invalid && (angForm.controls['cname'].dirty || angForm.controls['cname'].touched)\\\"  >\\r\\n                                        <div *ngIf=\\\"angForm.controls['cname'].errors.required\\\">\\r\\n                                          <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Crop Name is required.</small></p>\\r\\n                                        </div>\\r\\n                          </div>\\r\\n                                </div>\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label> Price</label>\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"pprice\\\" type=\\\"text\\\" id = \\\"id2\\\" placeholder=\\\"Enter the Price\\\" #price id=\\\"usr\\\">\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"angForm.controls['pprice'].invalid && (angForm.controls['pprice'].dirty || angForm.controls['pprice'].touched)\\\" >\\r\\n                                <div *ngIf=\\\"angForm.controls['pprice'].errors.required\\\">\\r\\n                                    <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Price is required.</small></p>\\r\\n                                </div>\\r\\n                          </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label>Quantity</label>\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"qty\\\" type=\\\"text\\\" id = \\\"id3\\\" placeholder=\\\"Enter the Quantity\\\" #quantity id=\\\"usr\\\">\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\"  >\\r\\n                                <div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n                                    <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Quantity is required.</small></p>\\r\\n                                </div>\\r\\n                          </div>\\r\\n                          </div>\\r\\n                          <br>&nbsp;&nbsp;\\r\\n                           <button type=\\\"button\\\"\\r\\n                    [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 class=\\\"btn\\\" (click)=\\\"farmer_add_product(name.value,price.value,quantity.value)\\\">Create Crop\\r\\n                  </button>&nbsp;\\r\\n              \\r\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #b1 (click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n                        </form>\\r\\n                      </div>    \\r\\n                  </div>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                            <h3><b>Available Crop Details</b></h3><br>\\r\\n                            <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\r\\n                                                    <!--Table head-->\\r\\n                                      <thead class=\\\"tablecolor\\\"  >\\r\\n                                          <tr class=\\\"text-black\\\">\\r\\n                                                <th>Crop name</th>\\r\\n                                              <th>Crop ID</th>                                            \\r\\n                                              <th>Added Date</th>\\r\\n                                              <th>Price Per Quantity <small>(in ether)</small></th>\\r\\n                                              <th>Quantity</th>\\r\\n                                          </tr>\\r\\n                                      </thead>\\r\\n                                      <!--Table head-->\\r\\n                                  \\r\\n                                      <!--Table body-->\\r\\n                                      <tbody id=\\\"body_bank\\\">\\r\\n                                              <tr *ngFor=\\\"let s of product_details\\\" >                                                \\r\\n                                                  <td>{{s.product_name}}</td>\\r\\n                                                  <td>{{s.product_id}}</td>\\r\\n                                                  <td>{{ s.add_time }}</td> \\r\\n                                                  <td>{{ s.product_price }}</td>\\r\\n                                                  <td>{{s.product_quantity}}</td>\\r\\n                                              </tr>\\r\\n                                      </tbody>\\r\\n                                      <!--Table body-->\\r\\n                                  </table> \\r\\n                            \\r\\n                     \\r\\n                        \\r\\n                    </div>\\r\\n                  \\r\\n                  <!-- </div> -->\\r\\n                   \\r\\n               \\r\\n                </div>\\r\\n              \\r\\n                  \\r\\n              \\r\\n              <br>\\r\\n              <br>\\r\\n      \\r\\n        </div>\\r\\n        <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n\r\n@Component({\r\n  selector: 'app-former',\r\n  templateUrl: './former.component.html',\r\n  styleUrls: ['./former.component.css']\r\n})\r\nexport class FormerComponent implements OnInit {\r\n  public  farmer_bal;\r\n  angForm:FormGroup;\r\n  constructor(private cs:ChainServiceService,private fb:FormBuilder,private spinner: NgxSpinnerService) \r\n  { \r\n  \tthis.createForm();\r\n  }\r\n  createForm() \r\n   {\r\n\t    this.angForm = this.fb.group({\r\n        cname: ['', Validators.required ],\r\n        pprice: ['', Validators.required ],\r\n        qty:['',Validators.required]\r\n\t      // Updaters:['',Validators.required]\r\n\t    });\r\n   }\r\n\r\n\r\n public product_details=[];\r\n \r\n  farmer_add_product(product_name,product_price,product_quantity){\r\n    console.log(product_name,product_price,product_quantity);\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_add_product(product_name,product_price,product_quantity,address).then(res => {\r\n        this.farmer_crop_table();\r\n        (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n        (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n        (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n        this.farmer_crop_table();\r\n        this.spinner.hide();\r\n        if(res == 1)\r\n        {\r\n          this.spinner.hide();\r\n          swal(\"Crop Added Successfully\")\r\n        }\r\n        else if(res == 0)\r\n        {\r\n          this.spinner.hide();\r\n          swal(\"You Rejected this Transaction\")\r\n        }\r\n        else if(res == 2){\r\n          this.spinner.hide();\r\n          swal(\"Transaction Failed\")\r\n        }\r\n      })\r\n    })\r\n  } \r\n\r\n  farmer_crop_table(){\r\n    this.product_details.length = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_id_by_address(address).then(farmer_id => {\r\n        this.cs.product_ids().then(produt_ids => {\r\n          produt_ids.forEach(produt_id=>{\r\n            this.cs.product_detail_map(produt_id).then(p_d => {\r\n              if(p_d[3]==farmer_id)\r\n              {\r\n                let arr = {};\r\n                arr['product_id'] = produt_id;\r\n                arr['product_name']=p_d[0];\r\n                arr['product_price']=p_d[1]/1000000000000000000;\r\n                arr['product_quantity']=p_d[2];\r\n                var tm = new Date(p_d[4].toNumber()*1000);\r\n                var time= tm.toString();\r\n                arr['add_time']=time;\r\n                this.product_details.push(arr);\r\n              }\r\n            })\r\n          });\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\r\n  farmer_balance(){\r\n    this.farmer_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.supplier_id_by_address(address).then(farmer_id => {\r\n        this.cs.farmer_balance(farmer_id).then(res => {\r\n          this.farmer_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n\r\n\r\n  withdraw_func(withdrawamt){\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.former_withdraw(withdrawamt*1000000000000000000,address).then(res => {\r\n        if(res == 1)\r\n        {\r\n          swal(\"Crop Added Successfully\")\r\n          this.farmer_balance();\r\n        }\r\n        else if(res == 0)\r\n        {\r\n          swal(\"You Rejected this Transaction\")\r\n        }\r\n        else if(res == 2){\r\n          swal(\"Transaction Failed\")\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.farmer_crop_table();\r\n    this.farmer_balance();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ChainServiceService } from '../service/chain-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\npublic address:string;\n\n  constructor(private cs:ChainServiceService,private route:Router){\n    this.cs.getAccount().then(address=>this.address=address)\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.cs.check_admin().then(result => {\n        if (this.address===result)\n        {\n          // alert(\"admin\")\n          return true;\n         \n        }\n        else\n        {\n          // alert('You dont have admin access')\n          this.route.navigate([\"user\"]);\n          return false;\n        }\n      })\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsumerCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    // this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_consumer().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          alert('consumer not registered')\r\n          this.route.navigate([\"addconsumer\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FarmerCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_farmer().then(result => {\r\n        if (result !=0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result ==0)\r\n        {\r\n          alert('Farmer not registered')\r\n          this.route.navigate([\"addfarmer\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_shop().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          alert('shop not registered')\r\n          this.route.navigate([\"addshop\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplierCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\r\n      return this.cs.check_supplier().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          alert('Supplier Not Registered')\r\n          this.route.navigate([\"addsupplier\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","module.exports = \"body,html{\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n/* remove outer padding */\\r\\n\\r\\n.container-main .row{\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n/*Remove rounded coners*/\\r\\n\\r\\nnav.sidebar.navbar {\\r\\n    border-radius: 0px;\\r\\n}\\r\\n\\r\\nnav.sidebar, .container-main{\\r\\n    transition: margin 200ms ease-out;\\r\\n}\\r\\n\\r\\n/* Icons */\\r\\n\\r\\n.menu-icon {\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n/* Add gap to nav and right windows.*/\\r\\n\\r\\n/*.container-main{\\r\\n    padding: 10px 10px 0 10px;\\r\\n}*/\\r\\n\\r\\n/* Colors */\\r\\n\\r\\n.navbar-m2p {\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    border-color: #7C2289;\\r\\n    height: 2000%;\\r\\n}\\r\\n\\r\\n.navbar-m2p span, .navbar-m2p a {\\r\\n    color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.active .dropdown-toggle {\\r\\n    background-color: #245682;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav .open > a {\\r\\n    background-color: gray;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav li > a:hover, .nav .open > a:hover{\\r\\n    background-color: gray;\\r\\n}\\r\\n\\r\\n.nav li > a:focus, .nav .open > a:focus,\\r\\n.nav li > a:active, .nav .open > a:active {\\r\\n    background-color: gray;\\r\\n    /* color:black */\\r\\n}\\r\\n\\r\\n.nav .open ul > li {\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.navbar-m2p .navbar-nav .open .dropdown-menu>li>a {\\r\\n    color: #FFFFFF;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n/* borda menu active */\\r\\n\\r\\n/* .navbar-m2p .navbar-nav .active a {\\r\\n    margin-left: -1px;\\r\\n    border-left: 5px solid #428bca;\\r\\n} */\\r\\n\\r\\n/* Hamburger */\\r\\n\\r\\n.navbar-toggle {\\r\\n    background-color: white;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.navbar-toggle .icon-bar,\\r\\n.navbar-toggle .icon-bar + .icon-bar {\\r\\n    background-color: #428bca;\\r\\n}\\r\\n\\r\\nnav:hover .forAnimate{\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.navbar-m2p .dropdown-menu {\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.nav li.separator {\\r\\n    padding: 10px 15px;\\r\\n    text-transform: uppercase;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.navbar-header\\r\\n{\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n/* .....NavBar: Icon only with coloring/layout.....*/\\r\\n\\r\\n/*small/medium side display*/\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        position: absolute;\\r\\n        width: calc(100% - 40px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 40px;\\r\\n        float: right;\\r\\n    }\\r\\n\\r\\n    /*lets nav bar to be showed on mouseover*/\\r\\n    nav.sidebar:hover + .container-main{\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar.navbar.sidebar>.container .navbar-brand, .navbar>.container-fluid .navbar-brand {\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar .navbar-brand, nav.sidebar .navbar-header{\\r\\n        text-align: center;\\r\\n        width: 100%;\\r\\n        margin-left: 0px;\\r\\n        font-size: 25px;\\r\\n        line-height: 27px;\\r\\n    }\\r\\n\\r\\n    /*Center Icons*/\\r\\n    nav.sidebar a{\\r\\n        padding-right: 13px;\\r\\n    }\\r\\n\\r\\n    /* Colors/style dropdown box*/\\r\\n    nav.sidebar .navbar-nav .open .dropdown-menu {\\r\\n        position: static;\\r\\n        float: none;\\r\\n        width: auto;\\r\\n        margin-top: 0;\\r\\n        background-color: transparent;\\r\\n        border: 0;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    /*allows nav box to use 100% width*/\\r\\n    nav.sidebar .navbar-collapse, nav.sidebar .container-fluid{\\r\\n        padding: 0 1px 0 1px;\\r\\n    }\\r\\n\\r\\n    /*gives sidebar width/height*/\\r\\n    nav.sidebar{\\r\\n        width: 310px;\\r\\n        height: 100%;\\r\\n        position:fixed;\\r\\n        margin-left: -260px;\\r\\n        float: left;\\r\\n        z-index: 8000;\\r\\n        margin-bottom: 0px;\\r\\n    }\\r\\n\\r\\n    /*give sidebar 100% width;*/\\r\\n    nav.sidebar li {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    /* Move nav to full on mouse over*/\\r\\n    nav.sidebar:hover{\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*for hiden things when navbar hidden*/\\r\\n    .forAnimate{\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* .....NavBar: Fully showing nav bar..... */\\r\\n\\r\\n@media (min-width: 1330px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        width: calc(100% - 300px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Show all nav*/\\r\\n    nav.sidebar{\\r\\n        margin-left: 0px;\\r\\n        float: left;\\r\\n    }\\r\\n    /*Show hidden items on nav*/\\r\\n    nav.sidebar .forAnimate{\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.previous {\\r\\n    background-color:black ;\\r\\n    color: #f1f1f1;\\r\\n    border-color: black;\\r\\n}\\r\\n\\r\\n.round {\\r\\n    border-radius: 50%;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-m2p sidebar\\\" role=\\\"navigation\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-sidebar-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n               <font size=\\\"5\\\"style=\\\"color: #6aa3d5\\\">SupplyChain</font><font size=\\\"4\\\">Management</font>\\r\\n            </a> -->\\r\\n        </div>\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-sidebar-navbar-collapse-1\\\">\\r\\n                <!-- <button routerLink=\\\"/home\\\" class=\\\"previous\\\">&laquo; Home</button> -->\\r\\n                <a routerLink=\\\"/home\\\"><i class=\\\"fa fa-home\\\" style=\\\"font-size:30px\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n            <ul class=\\\"nav navbar-nav\\\"><br>\\r\\n                <li class=\\\"separator\\\">Account Details</li><br>\\r\\n                <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\r\\n                 <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br>\\r\\n            <!-- <li class=\\\"separator\\\">Account Details</li><br>\\r\\n            <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\r\\n             <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br> -->\\r\\n             <!-- <li class=\\\"separator\\\">Content</li><br> -->\\r\\n               <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/Former\\\">Farmer</a></li> -->\\r\\n               <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                    Farmer <span class=\\\"caret\\\"></span>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Former\\\" >Add Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Farmerwithdraw\\\" >Withdraw</a></li>                       \\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                    Supplier <span class=\\\"caret\\\"></span>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Supplier\\\" >Purchase Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Supplierwithdraw\\\" >Withdraw</a></li>                       \\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                        Distributor <span class=\\\"caret\\\"></span>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Shop\\\" >Purchase Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Shopwithdraw\\\" >Withdraw</a></li>                       \\r\\n                </ul>\\r\\n            </li>\\r\\n              <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/Supplier\\\">Distributor</a></li>\\r\\n              <li><a href=\\\"#\\\"  routerLink=\\\"/Shop\\\">Retailer</a></li> -->\\r\\n              <li><a href=\\\"#\\\" routerLink=\\\"/Customer\\\">Retailer</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ngx-spinner></ngx-spinner>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public address:string;\r\n  public balance:number;\r\n  constructor(private cs:ChainServiceService) {\r\n    this.cs.getAccount().then(add => {\r\n      this.address=add;\r\n    this.cs.getUserBalance(add).then(balance => this.balance = balance);\r\n  })\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"body,html{\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n/* remove outer padding */\\r\\n\\r\\n.container-main .row{\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n/*Remove rounded coners*/\\r\\n\\r\\nnav.sidebar.navbar {\\r\\n    border-radius: 0px;\\r\\n}\\r\\n\\r\\nnav.sidebar, .container-main{\\r\\n    transition: margin 200ms ease-out;\\r\\n}\\r\\n\\r\\n/* Icons */\\r\\n\\r\\n.menu-icon {\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n/* Add gap to nav and right windows.*/\\r\\n\\r\\n/*.container-main{\\r\\n    padding: 10px 10px 0 10px;\\r\\n}*/\\r\\n\\r\\n/* Colors */\\r\\n\\r\\n.navbar-m2p {\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    /* background-color: #2E266f; */\\r\\n    border-color: #7C2289;\\r\\n    height: 2000%;\\r\\n}\\r\\n\\r\\n.navbar-m2p span, .navbar-m2p a {\\r\\n    color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.active .dropdown-toggle {\\r\\n    background-color: #245682;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav .open > a {\\r\\n    background-color: gray;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav li > a:hover, .nav .open > a:hover{\\r\\n    background-color: gray;\\r\\n}\\r\\n\\r\\n.nav li > a:focus, .nav .open > a:focus,\\r\\n.nav li > a:active, .nav .open > a:active {\\r\\n    background-color: gray;\\r\\n    /* color:black */\\r\\n}\\r\\n\\r\\n.nav .open ul > li {\\r\\n    background-color: black\\r\\n}\\r\\n\\r\\n.navbar-m2p .navbar-nav .open .dropdown-menu>li>a {\\r\\n    color: #FFFFFF;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n/* borda menu active */\\r\\n\\r\\n/* .navbar-m2p .navbar-nav .active a {\\r\\n    margin-left: -1px;\\r\\n    border-left: 5px solid #428bca;\\r\\n} */\\r\\n\\r\\n/* Hamburger */\\r\\n\\r\\n.navbar-toggle {\\r\\n    background-color: white;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.navbar-toggle .icon-bar,\\r\\n.navbar-toggle .icon-bar + .icon-bar {\\r\\n    background-color: #428bca;\\r\\n}\\r\\n\\r\\nnav:hover .forAnimate{\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.navbar-m2p .dropdown-menu {\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.nav li.separator {\\r\\n    padding: 10px 15px;\\r\\n    text-transform: uppercase;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.navbar-header\\r\\n{\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n/* .....NavBar: Icon only with coloring/layout.....*/\\r\\n\\r\\n/*small/medium side display*/\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        position: absolute;\\r\\n        width: calc(100% - 40px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 40px;\\r\\n        float: right;\\r\\n    }\\r\\n\\r\\n    /*lets nav bar to be showed on mouseover*/\\r\\n    nav.sidebar:hover + .container-main{\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar.navbar.sidebar>.container .navbar-brand, .navbar>.container-fluid .navbar-brand {\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar .navbar-brand, nav.sidebar .navbar-header{\\r\\n        text-align: center;\\r\\n        width: 100%;\\r\\n        margin-left: 0px;\\r\\n        font-size: 25px;\\r\\n        line-height: 27px;\\r\\n    }\\r\\n\\r\\n    /*Center Icons*/\\r\\n    nav.sidebar a{\\r\\n        padding-right: 13px;\\r\\n    }\\r\\n\\r\\n    /* Colors/style dropdown box*/\\r\\n    nav.sidebar .navbar-nav .open .dropdown-menu {\\r\\n        position: static;\\r\\n        float: none;\\r\\n        width: auto;\\r\\n        margin-top: 0;\\r\\n        background-color: transparent;\\r\\n        border: 0;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    /*allows nav box to use 100% width*/\\r\\n    nav.sidebar .navbar-collapse, nav.sidebar .container-fluid{\\r\\n        padding: 0 1px 0 1px;\\r\\n    }\\r\\n\\r\\n    /*gives sidebar width/height*/\\r\\n    nav.sidebar{\\r\\n        width: 310px;\\r\\n        height: 100%;\\r\\n        position:fixed;\\r\\n        margin-left: -260px;\\r\\n        float: left;\\r\\n        z-index: 8000;\\r\\n        margin-bottom: 0px;\\r\\n    }\\r\\n\\r\\n    /*give sidebar 100% width;*/\\r\\n    nav.sidebar li {\\r\\n        width: 300px;\\r\\n    }\\r\\n\\r\\n    /* Move nav to full on mouse over*/\\r\\n    nav.sidebar:hover{\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*for hiden things when navbar hidden*/\\r\\n    .forAnimate{\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* .....NavBar: Fully showing nav bar..... */\\r\\n\\r\\n@media (min-width: 1330px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        width: calc(100% - 300px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Show all nav*/\\r\\n    nav.sidebar{\\r\\n        margin-left: 0px;\\r\\n        float: left;\\r\\n    }\\r\\n    /*Show hidden items on nav*/\\r\\n    nav.sidebar .forAnimate{\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\"","module.exports = \"<!-- <html>\\n<body style=\\\"background-color: blueviolet\\\">\\n    <nav class=\\\"navbar navbar\\\">\\n      \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li><a href=\\\"#\\\"  routerLink=\\\"/dashboard\\\">ADMIN</a></li>\\n            <li><a href=\\\"#\\\"  routerLink=\\\"/user\\\">USER</a></li>    \\n        </ul>\\n      \\n    </nav>\\n      \\n    <div class=\\\"container\\\">\\n      <p></p>\\n    </div>\\n\\n\\n\\n</body>  \\n</html> -->\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <nav class=\\\"navbar navbar-m2p sidebar\\\" role=\\\"navigation\\\">\\n            <div class=\\\"container-fluid\\\">\\n                <!-- Brand and toggle get grouped for better mobile display -->\\n                <div class=\\\"navbar-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-sidebar-navbar-collapse-1\\\">\\n                        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                        <span class=\\\"icon-bar\\\"></span>\\n                        <span class=\\\"icon-bar\\\"></span>\\n                        <span class=\\\"icon-bar\\\"></span>\\n                    </button>\\n                    <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                       <font size=\\\"5\\\"style=\\\"color: #6aa3d5\\\">SupplyChain</font><font size=\\\"4\\\">Management</font>\\n                    </a> -->\\n                </div>\\n                <!-- Collect the nav links, forms, and other content for toggling -->\\n                <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-sidebar-navbar-collapse-1\\\">\\n                       \\n                    <ul class=\\\"nav navbar-nav\\\"><br>\\n                        <li class=\\\"separator\\\">Account Details</li><br>\\n                        <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\n                         <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br>\\n                         <li class=\\\"\\\">\\n                                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                                   \\n                                    ADMIN <span class=\\\"caret\\\"></span>\\n                                </a>\\n                                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/dashboard\\\" >Overview</a></li>\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/persons\\\" >Overall Details</a></li>\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/suppliercrops\\\" >Supplier Details</a></li>\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/shopcrops\\\" >Distributor Details</a></li>\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/consumercrops\\\" >Retailer Details</a></li>\\n                                </ul>\\n                            </li>\\n                   \\n                         <!-- <li class=\\\"separator\\\">Account Details</li><br>\\n                    <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\n                     <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br> -->\\n                     <!-- <li class=\\\"separator\\\">Content</li><br> -->\\n                       <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/dashboard\\\">ADMIN</a></li>\\n                       <li><a href=\\\"#\\\"  routerLink=\\\"/persons\\\">OVERALL DETAILS</a></li> -->\\n                      <li><a href=\\\"#\\\"  routerLink=\\\"/user\\\">USER</a></li>\\n                    \\n                    </ul>\\n                </div>\\n            </div>\\n        </nav>\\n            <ngx-spinner></ngx-spinner>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      \\n        \\n    \\n\\n\\n    </div>\\n  </div>\\n  \\n   \\n\\n  \\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from '../service/chain-service.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public address:string;\n  public balance:number;\n  constructor(private cs:ChainServiceService) { \n    this.cs.getAccount().then(add => {\n      this.address=add;\n    this.cs.getUserBalance(add).then(balance => this.balance = balance);\n  })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 100px;\\r\\n        height: 30px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\"","module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n            <app-home></app-home>\\n        </div>\\n        <div class=\\\"col-sm-9\\\">\\n           \\n           \\n                \\n                <div class=\\\"container-fluid\\\">\\n                        <h2><b>Overview</b></h2>\\n                        <hr><br><br><br> \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-2\\\">\\n                            <h4><b>View Crop details</b></h4><br>\\n                                <label for=\\\"name\\\">Enter Crop Id:</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  #cid placeholder=\\\"Enter Crop id\\\" name=\\\"Name\\\">\\n                                <br><br>\\n                                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"display(cid.value)\\\">search</button>\\n                                <br> <br><h4>Total Crops:&nbsp;{{Total_products}}</h4>\\n                        </div>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-2\\\"></div>\\n                                <div class=\\\"col-sm-10\\\">\\n                                        <h4><b>Crop Details</b></h4><br>\\n                    \\n                                        <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                                            <thead class=\\\"tablecolor\\\">\\n                                              <tr>\\n                                                <th>Crop Name</th>\\n                                                <th>Crop ID</th>                                                \\n                                                <th>Crop Price</th>\\n                                                <th>Available Crop Quantity</th>\\n                                                <th>Farmer ID</th>\\n                                                <th>Farmer Name</th>\\n                                                <th>Crop Added On</th>                           \\n                                              </tr>\\n                                            </thead>\\n                                            <tbody id=\\\"body_bank\\\">\\n                                                <tr *ngFor=\\\"let p of product_details\\\" >\\n                                                    <td>{{ p.productname }}</td> \\n                                                    <td>{{ p.productid }}</td> \\n                                                     <td>{{ p.productprice }}</td>\\n                                                    <td>{{ p.productquantity }}</td> \\n                                                    <td>{{ p.farmerid }}</td>\\n                                                    <td>{{ p.farmername }}</td> \\n                                                    <td>{{ p.date }}</td>\\n                                                </tr>\\n                                        </tbody>\\n                                          </table>\\n        \\n                                </div>\\n                            </div>\\n                               \\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                                <h4>Crop Holder-<b>Supplier</b></h4>\\n                                <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">                                                                                                              \\n                                          <thead class=\\\"tablecolor\\\"  >\\n                                              <tr class=\\\"text-black\\\">\\n                                                  <th>Supplier Id</th>\\n                                                  <th>Supplier Name</th>\\n                                                  <th>Supplier Address</th>\\n                                                  <th>Crop Price</th>\\n                                                  <th>Crop Quantity</th>\\n                                                  <th>Farmer Id</th>\\n                                                  <th>Farmer Name</th>\\n                                              </tr>\\n                                          </thead>\\n                                         \\n                                          <tbody id=\\\"body_bank\\\">                                       \\n                                                  <tr *ngFor=\\\"let i of suppliers_list\\\" >\\n                                                      <td>{{i.supplier_id}}</td>\\n                                                      <td>{{i.supplier_name}}</td>\\n                                                      <td>{{i.supplier_address }}</td> \\n                                                      <td>{{i.crop_price }}</td>\\n                                                      <td>{{i.crop_quantity}}</td>\\n                                                      <td>{{i.seller_id}}</td>\\n                                                      <td>{{i.seller_name}}</td>\\n                                                  </tr>\\n                                          </tbody>\\n                                          \\n                                      </table> \\n\\n                        </div>\\n                      \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                                <h4>Crop Holder-<b>Distributor</b></h4>\\n                                <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">                                                                             \\n                          <thead class=\\\"tablecolor\\\"  >\\n                              <tr class=\\\"text-black\\\">\\n                                  <th>Distributor Id</th>\\n                                  <th>Distributor Name</th>\\n                                  <th>Distributor Address</th>\\n                                  <th>Crop Price</th>\\n                                  <th>Crop Quantity</th>\\n                                  <th>Supplier Id</th>\\n                                  <th>Supplier Name</th>\\n                              </tr>\\n                          </thead>\\n                        \\n                          <tbody id=\\\"body_bank\\\">\\n                                  <tr *ngFor=\\\"let i of shops_list\\\" >\\n                                      <td>{{i.shop_id}}</td>\\n                                      <td>{{i.shop_name}}</td>\\n                                      <td>{{i.shop_address }}</td> \\n                                      <td>{{i.crop_price }}</td>\\n                                      <td>{{i.crop_quantity}}</td>\\n                                      <td>{{i.seller_id}}</td>\\n                                      <td>{{i.seller_name}}</td>\\n                                  </tr>\\n                          </tbody>\\n                        \\n                      </table> \\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                    <h4>Crop Holder-<b>Retailer</b></h4>\\n                                    <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">                     \\n                                <thead class=\\\"tablecolor\\\"  >\\n                                  <tr class=\\\"text-black\\\">\\n                                      <th>Retailer Id</th>\\n                                      <th>Retailer Name</th>\\n                                      <th>Retailer Address</th>\\n                                      <th>Crop Price</th>\\n                                      <th>Crop Quantity</th>\\n                                      <th>Distributor Id</th>\\n                                      <th>Distributor Name</th>\\n                                  </tr>\\n                                </thead>\\n                            \\n                                <tbody id=\\\"body_bank\\\">\\n                                      <tr *ngFor=\\\"let i of consumers_list\\\" >\\n                                          <td>{{i.consumer_id}}</td>\\n                                          <td>{{i.consumer_name}}</td>\\n                                          <td>{{i.consumer_address }}</td> \\n                                          <td>{{i.crop_price }}</td>\\n                                          <td>{{i.crop_quantity}}</td>\\n                                          <td>{{i.shop_id}}</td>\\n                                          <td>{{i.shop_name}}</td>\\n                                      </tr>\\n                                </tbody>\\n                            \\n                                </table> \\n                            </div>\\n                        </div>                      \\n                </div>\\n                <ngx-spinner></ngx-spinner>\\n\\n              \\n\\n        </div>\\n      </div>\\n      \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from '../service/chain-service.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n  public dashboard=[];\n  public Total_products;\n  public suppliers_list=[];\n  public shops_list=[];\n  public consumers_list=[];\n  public product_details=[];\n  constructor(private cs:ChainServiceService) {\n    cs.product_ids().then(result =>this.Total_products=result.length)\n   }\n\ndisplay(text_id)\n{\n  this.suppliers_list.length=0;\n  this.shops_list.length=0;\n  this.consumers_list.length=0;\nthis.cs.supplier_ids().then(s_ids=>{\n  s_ids.forEach(id=>{\nthis.cs.product_detail_map_supplier(text_id,id).then(result=>{\n  if(result[1].toNumber()!=0)\n  {\n    this.cs.farmer_name(result[2]).then(farmer_name=>{\n    this.cs.supplier_by_id(id).then(address=>{\n      this.cs.supplier_name(id).then(name=>{\n        let obj1={};\n        obj1['supplier_id']=id;\n        obj1['supplier_name']=name;\n        obj1['supplier_address']=address;\n        obj1['crop_price']=result[0]/1000000000000000000;\n        obj1['crop_quantity']=result[1];\n        obj1['seller_id']=result[2];\n        obj1['seller_name']=farmer_name;;\n        this.suppliers_list.push(obj1)\n      })\n    })\n  })\n  }\n  else{\n    // alert('NO Holders')\n  }\n})\n})\n})\n\nthis.cs.shop_ids().then(shp_ids=>{\n  shp_ids.forEach(id => {\n    this.cs.product_detail_map_shop(text_id,id).then(result=>{\n      if(result[1].toNumber()!=0)\n      {\n        this.cs.supplier_name(result[2]).then(supplier_name=>{\n        this.cs.shop_by_id(id).then(address=>{\n          this.cs.shop_name(id).then(name=>{\n            let obj2={};\n            obj2['shop_id']=id;\n            obj2['shop_name']=name;\n            obj2['shop_address']=address;\n            obj2['crop_price']=result[0]/1000000000000000000;\n            obj2['crop_quantity']=result[1];\n            obj2['seller_id']=result[2];\n            obj2['seller_name']=supplier_name;\n            this.shops_list.push(obj2)\n           })\n        })\n      })\n      }\n    })\n    \n  });\n})\n\n\nthis.cs.consumer_ids().then(cons_ids=>{\n  cons_ids.forEach(id=>{\n    this.cs.order_id(id).then(order_ids=>{\n      order_ids.forEach(or_id=>{\n    this.cs.consumer_map(id,or_id).then(result=>{\n      if(result[2]==text_id){\n      this.cs.shop_name(result[2]).then(shop_name=>{\n              this.cs.consumer_by_id(id).then(address=>{\n      this.cs.consumer_name(id).then(name=>{\n        let obj3={};\n        obj3['consumer_id']=id;\n        obj3['consumer_name']=name;\n        obj3['consumer_address']=address;\n        obj3['crop_price']=result[3]/1000000000000000000;\n        obj3['crop_quantity']=result[1];\n        obj3['shop_id']=result[2];\n        obj3['shop_name']=shop_name;\n        //  alert(name+''+address+''+result[0]+''+result[1]+''+result[2])\n         console.log(obj3);\n         \n         this.consumers_list.push(obj3)\n      })\n    })\n  })\n}\n    })\n      })})\n  })\n})\n}\n\navailable_product_details(){\n  console.log(\"in\");\n  \n  this.product_details.length = 0;\n this.cs.product_ids().then(productid =>{\n   productid.forEach(productids => {\n     this.cs.product_detail_map(productids).then(res =>{\n      this.cs.farmer_name(res[3]).then(farmername =>{\n       \n        let obj = {};\n        obj['productid'] = productids;\n        obj['productname'] = res[0];\n        obj['productprice'] = res[1]/1000000000000000000;\n        obj['productquantity'] = res[2];\n        obj['farmerid'] = res[3];\n        obj['farmername'] = farmername;\n        var tm = new Date(res[4].toNumber()*1000);\n        var time= tm.toString();\n        obj['date'] = time;\n        this.product_details.push(obj);\n       \n    \n     })\n    })\n   })\n\n })\n}\n\n  ngOnInit() {\n    this.available_product_details();\n  }\n\n}\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <app-home></app-home>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      \\n        <div class=\\\"container-fluid\\\">\\n            <h2><b>Overall Details</b></h2>\\n            <hr><br><br><br><br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-4\\\">\\n                  <h4><b>Available Farmer Details</b></h4><br>\\n            \\n                  <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                      <thead class=\\\"tablecolor\\\">\\n                        <tr>\\n                          <th>Farmer ID</th>\\n                          <th>Farmer Name</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody id=\\\"body_bank\\\">\\n                          <tr *ngFor=\\\"let f of farmer_names\\\" >\\n                              <td>{{ f.farmerid }}</td> \\n                              <td>{{ f.farmername }}</td>\\n                          </tr>\\n                  </tbody>\\n                    </table>\\n              </div>\\n              <div class=\\\"col-sm-4\\\">\\n                  <h4><b>Available Supplier Details</b></h4><br>\\n            \\n                  <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                      <thead class=\\\"tablecolor\\\">\\n                        <tr>\\n                          <th>Supplier ID</th>\\n                          <th>Supplier Name</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody id=\\\"body_bank\\\">\\n                          <tr *ngFor=\\\"let s of supplier_names\\\" >\\n                              <td>{{ s.supplierid }}</td> \\n                              <td>{{ s.suppliername }}</td>\\n                          </tr>\\n                  </tbody>\\n                    </table>\\n              </div>\\n              <div class=\\\"col-sm-4\\\">\\n                    <h4><b>Available Distributor Details</b></h4><br>\\n            \\n                    <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                        <thead class=\\\"tablecolor\\\">\\n                          <tr>\\n                            <th>Distributor ID</th>\\n                            <th>Distributor Name</th>\\n                          </tr>\\n                        </thead>\\n                        <tbody id=\\\"body_bank\\\">\\n                            <tr *ngFor=\\\"let sh of shop_names\\\" >\\n                                <td>{{ sh.shopid }}</td> \\n                                <td>{{ sh.shopname }}</td>\\n                            </tr>\\n                    </tbody>\\n                      </table>\\n                </div>\\n               \\n            </div>\\n          <br><br><br>\\n            <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                            <h4><b>Available Retailer Details</b></h4><br>\\n                    \\n                            <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                                <thead class=\\\"tablecolor\\\">\\n                                  <tr>\\n                                    <th>Retailer ID</th>\\n                                    <th>Retailer Name</th>\\n                                  </tr>\\n                                </thead>\\n                                <tbody id=\\\"body_bank\\\">\\n                                    <tr *ngFor=\\\"let c of consumer_names\\\" >\\n                                        <td>{{ c.customerid }}</td> \\n                                        <td>{{ c.customername }}</td>\\n                                    </tr>\\n                            </tbody>\\n                              </table>\\n                        </div>\\n                        <div class=\\\"col-sm-8\\\">\\n                                <h4><b>Available Crop Details</b></h4><br>\\n                    \\n                                <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n                                    <thead class=\\\"tablecolor\\\">\\n                                      <tr>\\n                                        <th>Crop ID</th>\\n                                        <th>Crop Name</th>\\n                                        <th>Crop Price</th>\\n                                        <th>Crop Quantity</th>\\n                                        <th>Farmer ID</th>\\n                                        <th>Farmer Name</th>\\n                                        <th>Crop Added On</th>                           \\n                                      </tr>\\n                                    </thead>\\n                                    <tbody id=\\\"body_bank\\\">\\n                                        <tr *ngFor=\\\"let p of product_details\\\" >\\n                                            <td>{{ p.productid }}</td> \\n                                            <td>{{ p.productname }}</td>  \\n                                            <td>{{ p.productprice }}</td>\\n                                            <td>{{ p.productquantity }}</td> \\n                                            <td>{{ p.farmerid }}</td>\\n                                            <td>{{ p.farmername }}</td> \\n                                            <td>{{ p.date }}</td>\\n                                        </tr>\\n                                </tbody>\\n                                  </table>\\n                        </div>\\n              </div>\\n          \\n          </div>\\n\\n\\n    </div>\\n  </div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from \"../service/chain-service.service\";\n\n@Component({\n  selector: 'app-persons',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n  public farmer_names = [];\n  public supplier_names = [];\n  public shop_names = [];\n  public consumer_names = [];\n  public product_details = [];\n\n  constructor(private cs:ChainServiceService) { }\n\n  available_farmers_table(){\n    this.farmer_names.length = 0;\n    this.cs.farmer_ids().then(farmer_ids => {\n      farmer_ids.forEach(farmer_id => {\n        this.cs.farmer_name(farmer_id).then(farmer_name => {\n          let obj ={};\n          obj['farmerid'] = farmer_id;\n          obj['farmername'] = farmer_name;\n          this.farmer_names.push(obj);\n        })\n      })\n    })\n  }\n  available_suppliers_table(){\n    this.supplier_names.length = 0;\n    this.cs.supplier_ids().then(supplier_ids => {\n      supplier_ids.forEach(supplier_id => {\n        this.cs.supplier_name(supplier_id).then(supplier_name => {\n          let obj ={};\n          obj['supplierid'] = supplier_id;\n          obj['suppliername'] = supplier_name;\n          this.supplier_names.push(obj);\n        })\n      })\n    })\n  }\n  available_shop_table(){\n    this.shop_names.length = 0;\n    this.cs.shop_ids().then(shop_ids => {\n      shop_ids.forEach(shop_id => {\n        this.cs.farmer_name(shop_id).then(shop_name => {\n          let obj ={};\n          obj['shopid'] = shop_id;\n          obj['shopname'] = shop_name;\n          this.shop_names.push(obj);\n        })\n      })\n    })\n  }\n\n  available_customer_table(){\n    this.consumer_names.length = 0;\n    this.cs.consumer_ids().then(customer_ids => {\n      customer_ids.forEach(customer_id => {\n        this.cs.consumer_name(customer_id).then(customer_name => {\n          let obj ={};\n          obj['customerid'] = customer_id;\n          obj['customername'] = customer_name;\n          this.consumer_names.push(obj);\n        })\n      })\n    })\n  }\n\navailable_product_details(){\n  console.log(\"in\");\n  \n  this.product_details.length = 0;\n this.cs.product_ids().then(productid =>{\n   productid.forEach(productids => {\n     this.cs.product_detail_map(productids).then(res =>{\n      this.cs.farmer_name(res[3]).then(farmername =>{\n       if(res[2]!=0){\n        let obj = {};\n        obj['productid'] = productids;\n        obj['productname'] = res[0];\n        obj['productprice'] = res[1]/1000000000000000000;\n        obj['productquantity'] = res[2];\n        obj['farmerid'] = res[3];\n        obj['farmername'] = farmername;\n        var tm = new Date(res[4].toNumber()*1000);\n        var time= tm.toString();\n        obj['date'] = time;\n        this.product_details.push(obj);\n       }\n    \n     })\n    })\n   })\n\n })\n}\n\n  ngOnInit() {\n    this.available_farmers_table();\n    this.available_suppliers_table();\n    this.available_shop_table();\n    this.available_customer_table();\n    this.available_product_details();\n  }\n\n}\n","  import { Injectable } from '@angular/core';\r\n  import * as Web3 from 'web3';\r\n  declare let require: any;\r\n  declare let window: any;\r\n  \r\n  let contractAbi= require('./contract.json');\r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class  ChainServiceService {\r\n    public account: string = null; \r\n    public balance:number;\r\n    public  _web3: any;\r\n    public acc:string =null;\r\n    public supply_contract: any;\r\n    public supply_contract_address: string = \"0xb3d66bee3476ef150f73390807b78ebd6f294c5b\";\r\n\r\n    constructor() {\r\n      if (typeof window.web3 !== 'undefined') {\r\n        this._web3 = new Web3(window.web3.currentProvider);\r\n        this.supply_contract = this._web3.eth.contract(contractAbi).at(this.supply_contract_address);\r\n    }  \r\n  } \r\n\r\n  public async getAccount(): Promise<string> {\r\n    if (this.account == null) {\r\n      this.account = await new Promise((resolve, reject) => {\r\n        this._web3.eth.getAccounts((err, accs) => {\r\n          console.log(accs);\r\n          \r\n          if (err != null) {\r\n            // this.router.navigate(['metamask']);\r\n            return;\r\n          }\r\n          if (accs.length === 0) {\r\n            // this.router.navigate(['metamask']);\r\n            return;\r\n          }\r\n          resolve(accs[0]);\r\n\r\n          })\r\n      }) as string;\r\n      this._web3.eth.defaultAccount = this.account;\r\n    }\r\n    return Promise.resolve(this.account);\r\n  }\r\n\r\n  public async getUserBalance(account): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      let _web3 = this._web3;\r\n      this._web3.eth.getBalance(account,function(err,result){\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          resolve(_web3.fromWei(result));\r\n      })\r\n    }) as Promise<number>;\r\n  }\r\n\r\n  public async hash(a): Promise<boolean> {\r\n    let meta = this;\r\n    return new Promise((resolve, reject) => {\r\n\r\n      var accountInterval = setInterval(function()\r\n      {\r\n        meta._web3.eth.getTransactionReceipt(a,function(err,result){\r\n          if(err != null) {\r\n          reject(err);\r\n          }\r\n\r\n          if(result !== null)\r\n          {\r\n            clearInterval(accountInterval);\r\n            if(result.status == 0x1)\r\n            {\r\n              resolve(true);\r\n            }\r\n            else\r\n            {           \r\n              resolve(false);\r\n            }\r\n          }\r\n        })\r\n      },100)\r\n    }) as Promise<boolean>;\r\n  }\r\n\r\n  public async  check_admin(): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.admin.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n\r\n    public async product_detail_map(id): Promise<object> {\r\n      let instance = this;\r\n      return new Promise((resolve,reject) => {\r\n        instance.supply_contract.product_detail_map.call(id,function(err,result) {\r\n          if(err != null){\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(result)\r\n          }\r\n        })\r\n      }) as Promise<object>;\r\n    } \r\n\r\n  public async produt_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.produt_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;\r\n  }\r\n\r\n  public async  farmer_id_by_address(farmer_address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_id_by_address.call(farmer_address,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result.toNumber() )\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async farmer_name(farmer_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_name.call(farmer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n  public async farmer_by_id(farmer_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_by_id.call(farmer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n                        \r\n  public async farmer_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;   \r\n  }             \r\n\r\n  public async farmer_registeration(farmer_name,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_registeration.sendTransaction(farmer_name,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      }); \r\n    }) as Promise<number>;\r\n  }\r\n\r\n              \r\n  public async farmer_add_product(product_name,product_price,product_quantity,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_add_product.sendTransaction(product_name,instance._web3.toWei(product_price,'ether'),product_quantity,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n  public async farmer_balance(farmer_id): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.farmer_balance.call(farmer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async former_withdraw(ether,address): Promise<number> {\r\n    let instance=this;\r\n    return new Promise((resolve, reject) => {\r\n    instance.supply_contract.farmer_widthdraw.sendTransaction(ether,{from:address,gas: 600000},function(err,result){\r\n    if(err != null) {\r\n      // instance.spinner.hide()\r\n      resolve(0);\r\n    }\r\n    else {\r\n      instance.hash(result).then(res =>{\r\n        if(res == true)\r\n        {\r\n          resolve(1)\r\n        }\r\n        else if(res == false){\r\n          resolve(2)\r\n        }\r\n      })\r\n    }\r\n  })\r\n}) as Promise<number>;\r\n}\r\n\r\n  public async product_detail_map_supplier(id1,id2): Promise<object> {\r\n    let instance = this;\r\n    return new Promise((resolve,reject) => {\r\n      instance.supply_contract.product_detail_map_supplier.call(id1,id2,function(err,result) {\r\n        if(err != null){\r\n          reject(err);\r\n        }\r\n        else{\r\n          resolve(result)\r\n        }\r\n      })\r\n    }) as Promise<object>;\r\n  }\r\n\r\n  public async supplier_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;\r\n  }\r\n\r\n  public async  supplier_id_by_address(supplier_address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_id_by_address.call(supplier_address,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else  \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async supplier_by_id(supplier_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_by_id.call(supplier_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n  public async supplier_registeration(supplier_name,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_registeration.sendTransaction(supplier_name,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n  \r\n  public async supplier_name(supplier_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_name.call(supplier_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n  // product_id,product_quantity,new_price*1000000000000000000,address,(p_d[1].toNumber() *product_quantity)\r\n  public async supplier_buy_product(product_id,product_quantity,new_price,address,amount): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_buy_product.sendTransaction(product_id,product_quantity,new_price,{from:address,value:amount,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n  public async supplier_balance(supplier_id): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_balance.call(supplier_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n  public async product_detail_map_shop(id1,id2): Promise<object> {\r\n    let instance = this;\r\n    return new Promise((resolve,reject) => {\r\n      instance.supply_contract.product_detail_map_shop.call(id1,id2,function(err,result) {\r\n        if(err != null){\r\n          reject(err);\r\n        }\r\n        else{\r\n          resolve(result) \r\n        }\r\n      })\r\n    }) as Promise<object>;\r\n  }\r\n\r\n  public async shop_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;   \r\n  }            \r\n  \r\n  public async shop_balance(shop_id): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_balance.call(shop_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else  \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }  \r\n\r\n  public async supplier_widthdraw(amount,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.supplier_widthdraw.sendTransaction(amount,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n  public async shop_widthdraw(amount,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_widthdraw.sendTransaction(amount,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async product_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.produt_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;   \r\n  }            \r\n  public async shop_id_by_address(supplier_address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_id_by_address.call(supplier_address,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else  \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }                                  \r\n\r\n\r\n  public async shop_by_id(supplier_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_by_id.call(supplier_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n  public async shop_name(shop_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_name.call(shop_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n   \r\n  public async  shop_registeration(shop_name,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_registeration.sendTransaction(shop_name,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async shop_buy_product(product_id,product_quantity,new_price,su_i,address,amount): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.shop_buy_product.sendTransaction(product_id,product_quantity,instance._web3.toWei(new_price,'ether'),su_i,{from:address,value:amount,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)  \r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n    \r\n  public async consumer_ids(): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_ids.call(function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      \r\n      });\r\n    }) as Promise<number[]>;   \r\n  }           \r\n\r\n  public async check_farmer(): Promise<number> {                                       \r\n    let instance = this;\r\n    // let account_adddress:string;\r\n    return new Promise((resolve, reject) => {\r\n      instance.getAccount().then(account_adddress=>{\r\n      instance.supply_contract.farmer_id_by_address.call(account_adddress,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    })\r\n    }) as Promise<number>;\r\n  }\r\n  public async check_supplier(): Promise<number> {                                       \r\n    let instance = this;\r\n    // let account_adddress:string;\r\n    return new Promise((resolve, reject) => {\r\n      instance.getAccount().then(account_adddress=>{\r\n      instance.supply_contract.supplier_id_by_address.call(account_adddress,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    })\r\n    }) as Promise<number>;\r\n  }\r\n\r\npublic async check_shop(): Promise<number> {                                       \r\n    let instance = this;\r\n    // let account_adddress:string;\r\n    return new Promise((resolve, reject) => {\r\n      instance.getAccount().then(account_adddress=>{\r\n      instance.supply_contract.shop_id_by_address.call(account_adddress,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    })\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async check_consumer(): Promise<number> {                                       \r\n    let instance = this;\r\n    // let account_adddress:string;\r\n    return new Promise((resolve, reject) => {\r\n      instance.getAccount().then(account_adddress=>{\r\n      instance.supply_contract.consumer_id_by_address.call(account_adddress,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    })\r\n    }) as Promise<number>;\r\n  }\r\n\r\n\r\n  public async  consumer_id_by_address(consumer_adderss): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_id_by_address.call(consumer_adderss,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else \r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n  \r\n  public async consumer_by_id(consumer_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_by_id.call(consumer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n\r\n  public async order_id(consumer_id): Promise<number[]> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.order_id.call(consumer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else{\r\n          const arr:number[] = [];\r\n          for(var i=1;i<=result.toNumber();i++){\r\n          arr.push(i);\r\n        }\r\n        resolve(arr)\r\n      }\r\n      });\r\n    }) as Promise<number[]>;\r\n  }\r\n\r\n  \r\n  public async consumer_map(consumer_id,order_id): Promise<object> {\r\n    let instance = this;\r\n    return new Promise((resolve,reject) => {\r\n      instance.supply_contract.consumer_map.call(consumer_id,order_id,function(err,result) {\r\n        if(err != null){\r\n          reject(err);\r\n        }\r\n        else{\r\n          resolve(result)\r\n        }\r\n      })\r\n    }) as Promise<object>;\r\n  } \r\n  \r\n  \r\n  \r\n  public async consumer_name(consumer_id): Promise<string> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_name.call(consumer_id,function(err,result) {\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        else\r\n        {\r\n          resolve(result)\r\n        }\r\n      });\r\n    }) as Promise<string>;\r\n  }\r\n\r\n  public async consumer_registeration(name,address): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_registeration.sendTransaction(name,{from:address,gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      }); \r\n    }) as Promise<number>;\r\n  }\r\n  \r\n  \r\n  public async consumer_buy_product(product_id,product_quantity,shop_id,address,amount): Promise<number> {                                       \r\n    let instance = this;\r\n    return new Promise((resolve, reject) => {\r\n      instance.supply_contract.consumer_buy_product.sendTransaction(product_id,product_quantity,shop_id,{from:address,value:instance._web3.toWei(amount,'ether'),gas: 600000},function(err,result) {\r\n        if(err != null) {\r\n          // instance.spinner.hide()\r\n          resolve(0);\r\n        }\r\n        else {\r\n          instance.hash(result).then(res =>{\r\n            if(res == true)\r\n            {\r\n              resolve(1)\r\n            }\r\n            else if(res == false){\r\n              resolve(2)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }) as Promise<number>;\r\n  }\r\n           \r\n  }\r\n    ","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 30px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <app-home></app-home>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n            <h2><b>Distributor</b></h2>\\n            <hr>\\n        <br><br><br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h4><b>List of Distributor</b></h4><br>\\n            \\n      <table class=\\\"table table-striped\\\" style=\\\"display:block;height:500px;\\\">\\n          <thead class=\\\"tablecolor\\\">\\n            <tr>\\n              <th>Distributor Id</th>\\n              <th>Distributor Name</th>\\n              <th>Distributor Address</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n          <tbody >\\n              <tr *ngFor=\\\"let shop of shops\\\" >\\n                  <td>{{ shop.shop_id }}</td> \\n                  <td>{{ shop.shop_name }}</td>\\n                  <td>{{ shop.shop_address }}</td>\\n                  <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" (click)=\\\"crop_details(shop.shop_id)\\\"></td>\\n              </tr>\\n      </tbody>\\n        </table>  \\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n      <h4><b>Available Crop's Detail</b></h4><br>\\n            \\n      <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:500px;\\\">\\n          <thead class=\\\"tablecolor\\\">\\n            <tr>\\n              <th>Crop Id</th>\\n              <th>Crop Name</th>\\n              <th>Quantity</th>\\n              <th>Price</th>\\n\\n            </tr>\\n          </thead>\\n          <tbody>\\n              <tr *ngFor=\\\"let crop of cropdetails\\\" >\\n                  <td>{{ crop.crop_id }}</td> \\n                  <td>{{ crop.crop_name }}</td>\\n                  <td>{{ crop.crop_quantity}}</td>\\n                  <td>{{ crop.crop_price}}</td>\\n              </tr>\\n      </tbody>\\n        </table>  \\n  </div>\\n</div>                \\n    </div>\\n  </div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from \"../service/chain-service.service\";\n\n@Component({\n  selector: 'app-shop-crops',\n  templateUrl: './shop-crops.component.html',\n  styleUrls: ['./shop-crops.component.css']\n})\nexport class ShopCropsComponent implements OnInit {\n\n  constructor(private cs:ChainServiceService) { }\n  \n  public shops=[];\n  public cropdetails=[];\n\n  list_of_shops()\n  {\n    this.shops.length=0;\n    this.cs.shop_ids().then(ids=>{\n      ids.forEach(shop_id=>{\n        this.cs.shop_name(shop_id).then(shop_name=>{\n      this.cs.shop_by_id(shop_id).then(shop_address =>{\n        // alert(supplier_name+''+supplier_address)\n        let obj={};\n        obj['shop_id']=shop_id;\n        obj['shop_name']=shop_name;\n        obj['shop_address']=shop_address;\n        this.shops.push(obj)\n      })  \n      })\n    })\n    })\n  }\n\n  \n  crop_details(shop_id){\n    this.cropdetails.length=0;\n    this.cs.product_ids().then(ids=>{\n      ids.forEach(crop_id=>{\n    this.cs.product_detail_map_shop(crop_id,shop_id).then(result=>{\n      if(result[1]!=0)\n      {\n        let obj={};\n        obj['crop_id']=crop_id;\n        this.cs.product_detail_map(crop_id).then(res =>obj['crop_name']=res[0]);\n        obj['crop_quantity']=result[1];\n        obj['crop_price']=result[2];\n        this.cropdetails.push(obj);\n      }\n    })\n    })\n\n    })\n\n\n  }\n\n\n  ngOnInit() {\n    this.list_of_shops()\n\n  }\n\n}\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n   \\r\\n\\r\\n    <div class=\\\"jumbotron text-center\\\">\\r\\n      <h3>RETAILER REGISTRATION</h3>\\r\\n      \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"name\\\">Shop Name:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id1\\\" #name placeholder=\\\"Enter Shop Name\\\" name=\\\"sname\\\">\\r\\n          <br><br>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn\\\"(click)=\\\"shop_registeration(name.value)\\\">Register</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-shop-reg',\r\n  templateUrl: './shop-reg.component.html',\r\n  styleUrls: ['./shop-reg.component.css']\r\n})\r\nexport class ShopRegComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private spinner:NgxSpinnerService) { }\r\npublic name;\r\n  ngOnInit() {\r\n  }\r\n  shop_registeration(name)\r\n  {\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address=>{\r\n      this.cs.shop_registeration(name,address).then(res =>{ \r\n        this.spinner.hide();\r\n        if(res == 1) {\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Successfully Registered...!\");\r\n        }\r\n        else if( res == 0){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"You Rejected this transaction...!\");\r\n        }\r\n        else if(res == 2){\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          alert(\"Transaction Failed...!\");\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n\\r\\n.table-wrapper-2 {\\r\\n    /* display: block; */\\r\\n    max-height: 240px;\\r\\n    overflow-y: auto;\\r\\n    /* -ms-overflow-style: -ms-autohiding-scrollbar; */\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n\\r\\n\\r\\n\\t\\t<div class=\\\"Container-fluid\\\">\\r\\n\\t\\t\\t\\t<h2><b>Distributor</b></h2>\\r\\n\\t\\t\\t\\t<hr>\\r\\n\\r\\n\\t\\t\\r\\n<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-8\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3><b>Distributor Add Crop</b></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Crop ID</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"pid\\\" id=\\\"id1\\\" type=\\\"text\\\" placeholder=\\\"Enter the Crop ID\\\" #productid>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['pid'].invalid && (angForm.controls['pid'].dirty || angForm.controls['pid'].touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['pid'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Crop ID is required.</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Quantity</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"qty\\\" id=\\\"id2\\\" type=\\\"text\\\" placeholder=\\\"Enter the Quantiy\\\" #productquantity>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Quantity is required.</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Price</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"price\\\" type=\\\"text\\\"  #newprice readonly/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t -->\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Supplier ID</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"supid\\\" id=\\\"id3\\\" type=\\\"text\\\" placeholder=\\\"Enter Supplier id\\\" #suid>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['supid'].invalid && (angForm.controls['supid'].dirty || angForm.controls['supid'].touched)\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['supid'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Supplier ID is required.</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Update Price</label>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"price\\\" id=\\\"id4\\\" type=\\\"text\\\" placeholder=\\\"Enter New Price\\\" #newprice>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Update price is required.</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\"  #b2 class=\\\"btn\\\" (click)=\\\"buy(productid.value,productquantity.value,newprice.value,suid.value)\\\">Purchase Crop\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-sm-8\\\">\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<h3><b> Available Crop Details</b></h3><br>\\r\\n\\t\\t\\t<div class=\\\"table-wrapper-2\\\" > \\r\\n\\t\\t\\t<table class=\\\"table table-striped\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"tablecolor\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop Quantity</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Price Per Quantity <small>(in ether)</small></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Supplier ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Supplier Name</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody id=\\\"body_bank\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let os of available_supplierproducts\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productname }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productid }}</td> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productquantity }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productprice }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.supplierid }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.suppliername }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t</div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\r\\n\\t\\t\\t\\t<!-- <div class=\\\"row\\\"> -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-1\\\">\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t\\t<h3><b>Purchased Crop Details</b></h3><br>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-wrapper-2\\\" > \\r\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table table-striped\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"tablecolor\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Crop Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Crop ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Seller ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Quantity</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Price Per Quantity <small>(in ether)</small></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tbody id=\\\"body_bank\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let s of shops_available_products\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ s.product_name }}</td> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_id }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ s.seller_id }}</td> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_quantity }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t                 </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\t\\t<ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n\r\npublic available_supplierproducts=[];\r\npublic shops_available_products=[];\r\npublic shop_bal;\r\n\r\nangForm:FormGroup;\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private spinner: NgxSpinnerService) \r\n  { \r\n  \tthis.createForm();\r\n  }  \r\n\r\n  createForm() \r\n   {\r\n\t    this.angForm = this.fb.group({\r\n\t       pid: ['', Validators.required ],\r\n\t       qty: ['', Validators.required ],\r\n         price:['',Validators.required],\r\n         supid:['',Validators.required]\r\n        //  Updaters:['',Validators.required]\r\n\t    });\r\n   }\r\n\r\nbuy(product_id,product_quantity,new_price,su_id) \r\n{\r\n  if((document.getElementById('id1') as HTMLInputElement).value ==''){\r\n    swal(\"Please Enter the Crop Id\")\r\n    return;\r\n  }\r\n  if((document.getElementById('id2') as HTMLInputElement).value ==''){\r\n    swal(\"Please Enter the Quantity\")\r\n    return;\r\n  }\r\n  if((document.getElementById('id3') as HTMLInputElement).value ==''){\r\n    swal(\"Please Enter the Distributor Id\")\r\n    return;\r\n  }\r\n  if((document.getElementById('id4') as HTMLInputElement).value ==''){\r\n    swal(\"Please Enter the Update Price\")\r\n    return;\r\n  }\r\n  this.spinner.show();\r\n  this.cs.getAccount().then(address=>{\r\n    this.cs.product_detail_map_supplier(product_id,su_id).then(result=>{\r\n      console.log(result);\r\n      \r\n        this.cs.shop_buy_product(product_id,product_quantity,new_price,su_id,address,result[0].toNumber()*product_quantity).then(res=>{\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id4\") as HTMLInputElement).value = \"\";\r\n          this.spinner.hide();\r\n          if(res == 1)\r\n          {\r\n            swal(\"You Bought Crop Successfully\")\r\n            this.shop_product_details()\r\n          }\r\n          else if(res == 0)\r\n          {\r\n            swal(\"You Rejected this Transaction\")\r\n          }\r\n          else if(res == 2){\r\n            swal(\"Transaction Failed\")\r\n          }\r\n        })\r\n      \r\n    })\r\n  })\r\n}\r\n\r\nshop_balance(){\r\n  this.shop_bal = 0;\r\n  this.cs.getAccount().then(address => {\r\n    this.cs.shop_id_by_address(address).then(shop_id => {\r\n      this.cs.shop_balance(shop_id).then(res => {\r\n        this.shop_bal = res/1000000000000000000;\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\nshop_widthdraw(amount_to_widthdraw){\r\n  this.cs.getAccount().then(address =>{\r\n    this.cs.shop_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\r\n      if(res == 1)\r\n      {\r\n        swal(\"Amount Successfully Added to your Account\")\r\n        this.shop_balance();\r\n      }\r\n      else if(res == 0)\r\n      {\r\n        swal(\"You Rejected this Transaction\")\r\n      }\r\n      else if(res == 2){\r\n        swal(\"Transaction Failed\")\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nshop_product_details(){\r\n   \r\n      this.cs.getAccount().then(shop_address=>{\r\n        this.cs.shop_id_by_address(shop_address).then(shop_id => {\r\n          this.cs.produt_ids().then( product_ids => {\r\n            product_ids.forEach(p_id => {\r\n            \r\n            this.cs.product_detail_map_shop(p_id,shop_id).then(res => {\r\n              this.cs.product_detail_map(p_id).then(pro_d => {\r\n            if(res[2].toNumber() != 0){\r\n              let obj = {};\r\n              obj['product_name']=pro_d[0];\r\n              obj['product_id']=p_id;\r\n              obj['product_price']=res[0].toNumber()/1000000000000000000;\r\n              obj['product_quantity']=res[1].toNumber();\r\n              obj['seller_id']=res[2].toNumber();\r\n              // obj['product_quantity']=res[3];\r\n              this.shops_available_products.push(obj); \r\n            }         \r\n            })\r\n          })\r\n          })\r\n        })\r\n      })\r\n      })\r\n    // )\r\n}\r\n\r\navailable_supplier_products(){\r\n  let meta = this;\r\n  meta.cs.supplier_ids().then(ids=>{\r\n    meta.cs.product_ids().then(pids=>{\r\n      ids.forEach(function (v1) {\r\n        pids.forEach(function (v2) {\r\n            \r\n            meta.cs.supplier_name(v1).then(function(supplier_name){\r\n              meta.cs.product_detail_map_supplier(v2,v1).then(function(result){\r\n                \r\n                if(result[1].toNumber() != 0){\r\n                  \r\n                      meta.cs.product_detail_map(v2).then(function(v3){\r\n                        \r\n                          let obj = {};\r\n                          obj['supplierid']=v1;\r\n                          obj['suppliername']=supplier_name;\r\n                          obj['productid']=v2;\r\n                          obj['productname']= v3[0];\r\n                          obj['productquantity']=result[1].toNumber();\r\n                          obj['productprice']=result[0].toNumber()/1000000000000000000;\r\n                                      \r\n                          meta.available_supplierproducts.push(obj)\r\n                    });\r\n                }\r\n              });\r\n            });\r\n        });  \r\n      });\r\n    });\r\n  });\r\n}\r\n  ngOnInit() {\r\n    this.shop_balance();\r\n    this.shop_product_details()\r\n    this.available_supplier_products();\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n     \\n       \\n    <div class=\\\"col-sm-6\\\">\\n        <app-header></app-header>\\n    </div>\\n\\n    \\n    <div class=\\\"col-sm-2\\\">\\n        <br><br><br><br><br><br>\\n          <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\n        <h2 style=\\\"text-align:center\\\"><b>{{shop_bal}}</b></h2>\\n\\n\\n       &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br>\\n        \\n        <button   class=\\\"btn center-block\\\" (click)=\\\"shop_widthdraw(withdrawamt.value)\\\">withdraw</button>\\n\\n    </div> \\n\\n        <div class=\\\"col-sm-4\\\">\\n\\n        </div>\\n\\n</div>\\n<ngx-spinner></ngx-spinner> \"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from '../service/chain-service.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n\n@Component({\n  selector: 'app-shopwithdraw',\n  templateUrl: './shopwithdraw.component.html',\n  styleUrls: ['./shopwithdraw.component.css']\n})\nexport class ShopwithdrawComponent implements OnInit {\n\n  public  shop_bal;\n  constructor(private cs:ChainServiceService,private spinner: NgxSpinnerService){}\n\n\n  shop_balance(){\n    this.shop_bal = 0;\n    this.cs.getAccount().then(address => {\n      this.cs.shop_id_by_address(address).then(shop_id => {\n        this.cs.shop_balance(shop_id).then(res => {\n          this.shop_bal = res/1000000000000000000;\n        })\n      })\n    })\n  }\n  \n  \n  shop_widthdraw(amount_to_widthdraw){\n    this.spinner.show();\n\n    if((document.getElementById('id1') as HTMLInputElement).value == '' || amount_to_widthdraw<=0){\n      alert(\"Please Enter a Valid amount...!\");\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n      return;\n    }\n    this.cs.getAccount().then(address => {\n      this.cs.shop_id_by_address(address).then(shop_id => {\n        this.cs.shop_balance(shop_id).then(res => {\n          this.shop_bal = res/1000000000000000000;\n          if( this.shop_bal>=amount_to_widthdraw){\n          \n            this.cs.shop_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n            this.spinner.hide();\n            if(res == 1)\n            {\n              alert(\"Amount Successfully Added to your Account\")\n              this.shop_balance();\n            }\n            else if(res == 0)\n            {\n              alert(\"You Rejected this Transaction\")\n            }\n            else if(res == 2){\n              alert(\"Transaction Failed\")\n            }\n          })\n          }\n          else{\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n            alert(\"You Can Withdraw Upto\"+ this.shop_bal);\n          }\n        })\n      \n      })\n    })\n\n \n  \n  }\n\n  ngOnInit() {\n\n    this.shop_balance();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\"></div>\\n    <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">Sign</div>\\n            <div class=\\\"panel-body\\\">\\n                \\n                Account Address:&nbsp;&nbsp;<input type=\\\"text\\\" class=\\\"form-control\\\"  #accno  name=\\\"accnumber\\\">\\n                Private Key:&nbsp;&nbsp;<input type=\\\"text\\\" class=\\\"form-control\\\"  #pkey  name=\\\"privatekey\\\">\\n            </div>\\n          </div>\\n        </div>\\n   \\n    <div class=\\\"col-sm-4\\\"></div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\nexport class SignComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 30px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <app-home></app-home>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n        <h2><b>Supplier</b></h2>\\n        <hr>\\n      <br><br><br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h4><b>List of Suppliers</b></h4><br>\\n            \\n      <table class=\\\"table table-striped\\\" style=\\\"display:block;height:500px;\\\">\\n          <thead class=\\\"tablecolor\\\">\\n            <tr>\\n              <th>Supplier ID</th>\\n              <th>Supplier Name</th>\\n              <th>Supplier Address</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n          <tbody >\\n              <tr *ngFor=\\\"let supplier of suppliers\\\" >\\n                  <td>{{ supplier.supplier_id }}</td> \\n                  <td>{{ supplier.supplier_name }}</td>\\n                  <td>{{ supplier.supplier_address }}</td>\\n                  <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" (click)=\\\"crop_details(supplier.supplier_id)\\\"></td>\\n              </tr>\\n      </tbody>\\n        </table>  \\n  </div>\\n<div class=\\\"col-sm-4\\\">\\n    <h4><b>Available Crop's Detail</b></h4><br>\\n            \\n    <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\n        <thead class=\\\"tablecolor\\\">\\n          <tr>\\n            <th>Crop Id</th>\\n            <th>Crop Name</th>\\n            <th>Quantity</th>\\n            <th>Price</th>\\n\\n          </tr>\\n        </thead>\\n        <tbody id=\\\"body_bank\\\">\\n            <tr *ngFor=\\\"let crop of cropdetails\\\" >\\n                <td>{{ crop.crop_id }}</td> \\n                <td>{{ crop.crop_name }}</td>\\n                <td>{{ crop.crop_quantity}}</td>\\n                <td>{{ crop.crop_price}}</td>\\n            </tr>\\n    </tbody>\\n      </table>  \\n</div>\\n</div>          \\n    </div>\\n  </div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from \"../service/chain-service.service\";\n\n@Component({\n  selector: 'app-stock-list',\n  templateUrl: './stock-list.component.html',\n  styleUrls: ['./stock-list.component.css']\n})\nexport class StockListComponent implements OnInit {\n  public suppliers=[];\n  public cropdetails=[];\n\n  constructor(private cs:ChainServiceService) { }\n\n  list_of_suppliers()\n  {\n    this.suppliers.length=0;\n    this.cs.supplier_ids().then(ids=>{\n      ids.forEach(supplier_id=>{\n        this.cs.supplier_name(supplier_id).then(supplier_name=>{\n      this.cs.supplier_by_id(supplier_id).then(supplier_address =>{\n        // alert(supplier_name+''+supplier_address)\n        let obj={};\n        obj['supplier_id']=supplier_id;\n        obj['supplier_name']=supplier_name;\n        obj['supplier_address']=supplier_address;\n        this.suppliers.push(obj)\n      })  \n      })\n    })\n    })\n  }\n\n  crop_details(supplier_id){\n    this.cropdetails.length=0;\n    this.cs.product_ids().then(ids=>{\n      ids.forEach(crop_id=>{\n    this.cs.product_detail_map_supplier(crop_id,supplier_id).then(result=>{\n      if(result[1]!=0)\n      {\n        let obj={};\n        obj['crop_id']=crop_id;\n        this.cs.product_detail_map(crop_id).then(res =>obj['crop_name']=res[0]);\n        obj['crop_quantity']=result[1];\n        obj['crop_price']=result[2];\n        this.cropdetails.push(obj);\n      }\n      else\n      {\n        // alert('No crops')\n      }\n    })\n    })\n\n    })\n\n\n  }\n\n\n\n  ngOnInit() {\n    this.list_of_suppliers()\n  }\n\n}\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n     \\r\\n\\r\\n    <div class=\\\"jumbotron text-center\\\">\\r\\n      <h3>DISTRIBUTOR REGISTRATION</h3>  \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"name\\\">Name:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id1\\\" #name placeholder=\\\"Enter Name\\\" name=\\\"supname\\\">\\r\\n          <br><br>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"supplier_registeration(name.value)\\\">Register</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-supplier-reg',\r\n  templateUrl: './supplier-reg.component.html',\r\n  styleUrls: ['./supplier-reg.component.css']\r\n})\r\nexport class SupplierRegComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private spinner:NgxSpinnerService) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n  supplier_registeration(name)\r\n  {\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address=>{\r\n      \r\n      this.cs.supplier_registeration(name,address).then(res => {\r\n        this.spinner.hide();\r\n        if(res == 1)\r\n        {\r\n          alert(\"Successfully Registered...!\");\r\n          \r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n        }\r\n        else if(res == 0)\r\n        {\r\n          \r\n          alert(\"You Rejected this Transaction...!\");\r\n          \r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n        }\r\n        else if(res == 2){\r\n         \r\n          alert(\"Transaction Failed...!\");\r\n          \r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n.table-wrapper-2 {\\r\\n    /* display: block; */\\r\\n    max-height: 240px;\\r\\n    overflow-y: auto;\\r\\n    /* -ms-overflow-style: -ms-autohiding-scrollbar; */\\r\\n}\\r\\n.tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n                <h2><b>Supplier</b></h2>\\r\\n                <hr>\\r\\n            <br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n              \\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <h3><b>Supplier Add Crop </b></h3>\\r\\n          <div class =\\\"form-group\\\">\\r\\n            <br>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n                <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Crop ID</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control txtbox\\\" formControlName=\\\"pid\\\" placeholder=\\\"Enter the Crop Id\\\" id=\\\"id1\\\" #productid  maxlength=\\\"30\\\"><br>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['pid'].invalid && (angForm.controls['pid'].dirty || angForm.controls['pid'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['pid'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Crop ID is required.</small></p>\\r\\n                    </div>\\r\\n        </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Quantity</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control txtbox\\\" formControlName=\\\"qty\\\" #supplierquantity id=\\\"id2\\\" placeholder=\\\"Enter the Quantity\\\" maxlength=\\\"50\\\" ><br>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Quantity is required.</small></p>\\r\\n                    </div>\\r\\n            </div>\\r\\n                \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Update Price</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"price\\\" class=\\\"form-control txtbox\\\" #supplierrate id=\\\"id3\\\" placeholder=\\\" Enter New Price\\\" maxlength=\\\"30\\\" ><br>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Update price is required.</small></p>\\r\\n                    </div>\\r\\n        </div>\\r\\n           \\r\\n           <button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"buy_crop(productid.value,supplierquantity.value,supplierrate.value)\\\">Purchase Crop</button>&nbsp;\\r\\n                \\r\\n                  <!-- <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" #b1 (click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n        </form>\\r\\n                </div>\\r\\n    </div>\\r\\n        </div>\\r\\n     \\r\\n        \\r\\n     \\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            \\r\\n                <h3><b>Avaliable Crop Details</b></h3><br>\\r\\n                <div class=\\\"table-wrapper-2\\\" >  \\r\\n                <table class=\\\"table table-striped\\\" >\\r\\n                   <thead class=\\\"tablecolor\\\">\\r\\n                     <tr>\\r\\n                         <th>Crop Name</th>\\r\\n                         <th>Crop Id</th>                        \\r\\n                         <th>Date Added</th>\\r\\n                         <th>Price Per Quantity <small>(in ether)</small></th>\\r\\n                         <th>Quantity</th>\\r\\n                         <th>Farmer Id</th>\\r\\n                     </tr>\\r\\n                   </thead>\\r\\n                   <tbody id=\\\"body_bank\\\">\\r\\n                       <tr *ngFor=\\\"let s of available_crops\\\" >\\r\\n                        <td>{{s.cropname}}</td>\\r\\n                           <td>{{s.cropid}}</td>                         \\r\\n                           <td>{{s.date }}</td> \\r\\n                           <td>{{s.price }}</td>\\r\\n                           <td>{{s.quantity}}</td>\\r\\n                           <td>{{s.farmerid}}</td>\\r\\n                       </tr>\\r\\n                     </tbody>\\r\\n                 </table>\\r\\n                 </div>\\r\\n\\r\\n        </div>  \\r\\n        </div>\\r\\n<br><br><br>\\r\\n<div class=\\\"row\\\">\\r\\n        <br><br><br>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-11\\\">\\r\\n   <!-- <div class=\\\"col-sm-12\\\"> -->\\r\\n        <h3><b>Purchased Crop Details</b></h3><br>\\r\\n        <div class=\\\"table-wrapper-2\\\" >    \\r\\n              <table class= \\\"table\\\" >\\r\\n                <thead class=\\\"tablecolor\\\">\\r\\n                  <tr>\\r\\n                    <th>Crop Name</th>\\r\\n                      <th>Crop Id</th>                     \\r\\n                      <th >Date Added</th>\\r\\n                      <th>Price Per Quantity <small>(in ether)</small></th>\\r\\n                      <th>Quantity</th>\\r\\n                      <th>Farmer ID</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let s of purchased_crops\\\" >\\r\\n                     <td>{{s.cropname}}</td>\\r\\n                      <td>{{s.cropid}}</td>                   \\r\\n                      <td>{{s.date }}</td> \\r\\n                      <td>{{s.price }}</td>\\r\\n                      <td>{{s.quantity}}</td>\\r\\n                      <td>{{s.farmerid}}</td>\\r\\n                  </tr>\\r\\n                    \\r\\n                  </tbody>\\r\\n              </table>\\r\\n          <!-- </div> -->\\r\\n          </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n       \\r\\n         \\r\\n          \\r\\n        \\r\\n            <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n@Component({\r\n  selector: 'app-supplier',\r\n  templateUrl: './supplier.component.html',\r\n  styleUrls: ['./supplier.component.css']\r\n})\r\nexport class SupplierComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private fb:FormBuilder,private spinner: NgxSpinnerService) {\tthis.createForm(); }\r\n  angForm:FormGroup;\r\n  public available_crops = [];\r\n  public purchased_crops = [];\r\n  // public crop_details = [];\r\n  public supplier_bal;\r\n\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       pid: ['', Validators.required ],\r\n       qty: ['', Validators.required ],\r\n      \r\n       price:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n\r\n  buy_crop(product_id,product_quantity,new_price){\r\n    // console.log(product_id,product_quantity,new_price);\r\n    if((document.getElementById('id1') as HTMLInputElement).value ==''){\r\n      swal(\"Please Enter the Crop Id\")\r\n      return;\r\n    }\r\n    if((document.getElementById('id2') as HTMLInputElement).value ==''){\r\n      swal(\"Please Enter the Quantity\")\r\n      return;\r\n    }\r\n    if((document.getElementById('id3') as HTMLInputElement).value ==''){\r\n      swal(\"Please Enter the Update Price\")\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address =>{\r\n      this.cs.product_detail_map(product_id).then(p_d =>{\r\n        console.log(p_d[1].toNumber() *product_quantity);\r\n        \r\n        this.cs.supplier_buy_product(product_id,product_quantity,new_price*1000000000000000000,address,(p_d[1].toNumber() *product_quantity)).then(res => {\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n\r\n          this.available_crops_to_purchase();\r\n          this.Purchased_crops_table();\r\n          this.spinner.hide();\r\n          if(res == 1)\r\n          {\r\n            swal(\"You Bought Crop Successfully\")\r\n          }\r\n          else if(res == 0)\r\n          {\r\n            swal(\"You Rejected this Transaction\")\r\n          }\r\n          else if(res == 2){\r\n            swal(\"Transaction Failed\")\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n// cropdetails(){\r\n//   this.crop_details.length = 0;\r\n//   this.cs.product_ids().then(product_ids => {\r\n//     product_ids.forEach(product_id=>{\r\n//       this.cs.product_detail_map(product_id).then(p_d => {\r\n//         if(p_d[2] != 0)\r\n//         {\r\n//           let obj = {};\r\n//           obj['crop_id'] = product_id;\r\n//           obj['crop_name'] = p_d[0];\r\n//           this.crop_details.push(obj);\r\n//         }\r\n//       })\r\n//     })\r\n//   })\r\n// }\r\n\r\n\r\n  supplier_balance(){\r\n    this.supplier_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\r\n        this.cs.supplier_balance(supplier_id).then(res => {\r\n          this.supplier_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  supplier_withdraw_func(amount_to_widthdraw){\r\n    this.cs.getAccount().then(address =>{\r\n      this.cs.supplier_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\r\n        if(res == 1)\r\n        {\r\n          swal(\"Amount Successfully Added to your Account\")\r\n          this.supplier_balance();\r\n        }\r\n        else if(res == 0)\r\n        {\r\n          swal(\"You Rejected this Transaction\")\r\n        }\r\n        else if(res == 2){\r\n          swal(\"Transaction Failed\")\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\r\n  available_crops_to_purchase(){\r\n    this.available_crops.length = 0;\r\n    this.cs.product_ids().then(product_ids => {\r\n      product_ids.forEach(product_id=>{\r\n        this.cs.product_detail_map(product_id).then(p_d => {\r\n          if(p_d[2] != 0)\r\n          {\r\n            \r\n            let obj = {};\r\n            obj['cropid'] = product_id;\r\n            obj['cropname'] = p_d[0];\r\n            var tm = new Date(p_d[4].toNumber()*1000);\r\n            var time= tm.toString();\r\n            obj['date'] = time;\r\n            obj['quantity'] = p_d[2];\r\n            obj['price'] = p_d[1]/1000000000000000000;\r\n            obj['farmerid'] = p_d[3];\r\n            this.available_crops.push(obj);\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  Purchased_crops_table(){\r\n    this.purchased_crops.length = 0;\r\n    this.cs.getAccount().then(address =>{\r\n      this.cs.supplier_id_by_address(address).then(supplier_id =>{\r\n        this.cs.product_ids().then(product_ids=>{\r\n          product_ids.forEach(product_id => {\r\n            this.cs.product_detail_map_supplier(product_id,supplier_id).then(p_d_s => {\r\n              this.cs.product_detail_map(product_id).then(p_d => {\r\n                if(p_d_s[2] != 0){\r\n                  let obj = {};\r\n                  obj['cropid'] = product_id;\r\n                  obj['cropname'] = p_d[0];\r\n                  var tm = new Date(p_d[4].toNumber()*1000);\r\n                  var time= tm.toString();\r\n                  obj['date'] = time;\r\n                  obj['farmerid'] = p_d[3];\r\n                  obj['price'] = p_d_s[0]/1000000000000000000;\r\n                  obj['quantity'] = p_d_s[1];\r\n                  \r\n                  this.purchased_crops.push(obj);\r\n                }\r\n              })\r\n            })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.supplier_balance();\r\n    this.available_crops_to_purchase();\r\n    this.Purchased_crops_table();\r\n  }\r\n}","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 30px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n     \\n       \\n    <div class=\\\"col-sm-6\\\">\\n        <app-header></app-header>\\n    </div>\\n\\n    \\n    <div class=\\\"col-sm-2\\\">\\n        <br><br><br><br><br><br>\\n          <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\n        <h2 style=\\\"text-align:center\\\"><b>{{supplier_bal}}</b></h2>\\n\\n\\n       &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br>\\n        \\n        <button   class=\\\"btn center-block\\\" (click)=\\\"supplier_withdraw_func(withdrawamt.value)\\\">withdraw</button>\\n\\n    </div> \\n\\n        <div class=\\\"col-sm-4\\\">\\n\\n        </div>\\n\\n</div> \\n<ngx-spinner></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { ChainServiceService } from '../service/chain-service.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-supplierwithdraw',\n  templateUrl: './supplierwithdraw.component.html',\n  styleUrls: ['./supplierwithdraw.component.css']\n})\nexport class SupplierwithdrawComponent implements OnInit {\n\n  public  supplier_bal;\n  constructor(private cs:ChainServiceService,private spinner: NgxSpinnerService){\n    this.cs.getAccount().then(address=>{\n    this.cs.supplier_id_by_address(address).then(supplier_id => {\n      this.cs.supplier_balance(supplier_id).then(res => {\n        this.supplier_bal = res/1000000000000000000;\n      })\n    })\n    })\n  }\n\n\n\n  \n  supplier_balance(){\n    this.supplier_bal = 0;\n    this.cs.getAccount().then(address => {\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\n        this.cs.supplier_balance(supplier_id).then(res => {\n          this.supplier_bal = res/1000000000000000000;\n        })\n      })\n    })\n  }\n  \n  supplier_withdraw_func(amount_to_widthdraw){\n    this.spinner.show();\n    if((document.getElementById('id1') as HTMLInputElement).value == '' || amount_to_widthdraw<=0){\n      alert(\"Please Enter a Valid amount...!\");\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n      return;\n    }\n    \n    this.cs.getAccount().then(address=>{\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\n        this.cs.supplier_balance(supplier_id).then(res => {\n          this.supplier_bal = res/1000000000000000000;\n          //alert(this.supplier_bal);\n\n          if(this.supplier_bal >=amount_to_widthdraw){\n            this.cs.supplier_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\n              \n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n              this.spinner.hide();\n              if(res == 1)\n              {\n                alert(\"Amount Successfully Added to your Account\")\n                this.supplier_balance();\n              }\n              else if(res == 0)\n              {\n                alert(\"You Rejected this Transaction\")\n              }\n              else if(res == 2){\n                alert(\"Transaction Failed\")\n              }\n            })\n\n          }\n          else{\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\n            alert(\"You can withdraw upto\"+this.supplier_bal);\n          }\n        })\n      })\n     })\n\n    this.cs.getAccount().then(address =>{\n      \n    })\n  }\n\n\n\n  ngOnInit() {\n\n    this.supplier_balance();\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n      <app-header></app-header>\\n  </div>\\n  <div class=\\\"col-sm-9\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}